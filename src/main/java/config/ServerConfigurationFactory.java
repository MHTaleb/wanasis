package config;

import java.io.InputStream;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.Properties;
import javax.cache.configuration.Factory;
import javax.sql.DataSource;
import oracle.jdbc.pool.OracleDataSource;
import org.apache.ignite.cache.CacheAtomicityMode;
import org.apache.ignite.cache.CacheMode;
import org.apache.ignite.cache.QueryEntity;
import org.apache.ignite.cache.QueryIndex;
import org.apache.ignite.cache.QueryIndexType;
import org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStoreFactory;
import org.apache.ignite.cache.store.jdbc.JdbcType;
import org.apache.ignite.cache.store.jdbc.JdbcTypeField;
import org.apache.ignite.cache.store.jdbc.dialect.OracleDialect;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.DataRegionConfiguration;
import org.apache.ignite.configuration.DataStorageConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;
import org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder;

/** This file was generated by Ignite Web Console (11/21/2019, 08:54) **/
public class ServerConfigurationFactory {
	/** Secret properties loading. **/
	private static final Properties props = new Properties();

	static {
		try (InputStream in = IgniteConfiguration.class.getClassLoader().getResourceAsStream("secret.properties")) {
			props.load(in);
		} catch (Exception ignored) {
			// No-op.
		}
	}

	/** Helper class for datasource creation. **/
	public static class DataSources {
		public static final OracleDataSource INSTANCE_dsOracle_Compiere = createdsOracle_Compiere();

		private static OracleDataSource createdsOracle_Compiere() {
			try {
				OracleDataSource dsOracle_Compiere = new OracleDataSource();

				dsOracle_Compiere.setURL("jdbc:oracle:thin:@192.168.1.229:1521/compiere");
				dsOracle_Compiere.setUser("attiryak");
				dsOracle_Compiere.setPassword("compiere");

				return dsOracle_Compiere;
			} catch (SQLException ex) {
				throw new Error(ex);
			}
		}
	}

	/**
	 * Configure grid.
	 * 
	 * @return Ignite configuration.
	 * @throws Exception
	 *             If failed to construct Ignite configuration instance.
	 **/
	public static IgniteConfiguration createConfiguration() throws Exception {
		IgniteConfiguration cfg = new IgniteConfiguration();

		cfg.setIgniteInstanceName("sqlJoin");

		TcpDiscoverySpi discovery = new TcpDiscoverySpi();

		TcpDiscoveryMulticastIpFinder ipFinder = new TcpDiscoveryMulticastIpFinder();

		ipFinder.setAddresses(Arrays.asList("127.0.0.1:47500..47510"));

		discovery.setIpFinder(ipFinder);

		cfg.setDiscoverySpi(discovery);

		DataStorageConfiguration dataStorageCfg = new DataStorageConfiguration();

		DataRegionConfiguration dataRegionCfg = new DataRegionConfiguration();

		dataRegionCfg.setInitialSize(1073741824L);
		dataRegionCfg.setMaxSize(6442450944L);
		
		// --- edit made for bug 1529242019
		dataRegionCfg.setPersistenceEnabled(true);

		dataStorageCfg.setDefaultDataRegionConfiguration(dataRegionCfg);

		cfg.setDataStorageConfiguration(dataStorageCfg);

		cfg.setCacheConfiguration(cacheAdUserCache(), cacheCBpartnerCache(), cacheCInvoiceCache(),
				cacheCInvoicelineCache(), cacheCOrderCache(), cacheCOrderlineCache(), cacheMAttributeCache(),
				cacheMAttributeinstanceCache(), cacheMInoutCache(), cacheMInoutlineCache(), cacheMProductCache(),
				cacheXxListetauxvaleurCache());

		return cfg;
	}

	/**
	 * Create configuration for cache "AdUserCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheAdUserCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("AdUserCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);
		ccfg.setCopyOnRead(true);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeAdUser(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);
		ccfg.setEagerTtl(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.AdUser");
		qryEntity.setTableName("AD_USER");
		qryEntity.setKeyFieldName("adUserId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("adUserId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("name", "java.lang.String");
		fields.put("description", "java.lang.String");
		fields.put("password", "java.lang.String");
		fields.put("email", "java.lang.String");
		fields.put("supervisorId", "java.lang.Long");
		fields.put("cBpartnerId", "java.lang.Long");
		fields.put("processing", "java.lang.String");
		fields.put("emailuser", "java.lang.String");
		fields.put("emailuserpw", "java.lang.String");
		fields.put("cBpartnerLocationId", "java.lang.Long");
		fields.put("cGreetingId", "java.lang.Long");
		fields.put("title", "java.lang.String");
		fields.put("comments", "java.lang.String");
		fields.put("phone", "java.lang.String");
		fields.put("phone2", "java.lang.String");
		fields.put("fax", "java.lang.String");
		fields.put("lastcontact", "java.sql.Date");
		fields.put("lastresult", "java.lang.String");
		fields.put("birthday", "java.sql.Date");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("emailverify", "java.lang.String");
		fields.put("cJobId", "java.lang.Long");
		fields.put("emailverifydate", "java.sql.Date");
		fields.put("isfullbpaccess", "java.lang.String");
		fields.put("ldapuser", "java.lang.String");
		fields.put("notificationtype", "java.lang.String");
		fields.put("connectionprofile", "java.lang.String");
		fields.put("value", "java.lang.String");
		fields.put("adTreeMenufavoriteId", "java.lang.Long");
		fields.put("adTreeMenunewId", "java.lang.Long");
		fields.put("bouncedinfo", "java.lang.String");
		fields.put("isemailbounced", "java.lang.String");
		fields.put("lastregistrationreminder", "java.sql.Date");
		fields.put("xxIsabsent", "java.lang.String");
		fields.put("isinpayroll", "java.lang.String");
		fields.put("xxIsbonusmodif", "java.lang.String");
		fields.put("xxIspmmodif", "java.lang.String");
		fields.put("userDir", "java.lang.String");
		fields.put("xxChangepaymentterm", "java.lang.String");
		fields.put("xxIsprodsurcommande", "java.lang.String");
		fields.put("isexclude", "java.lang.String");
		fields.put("xxRecsupervisorId", "java.lang.Long");
		fields.put("xxTempsupervisorId", "java.lang.Long");
		fields.put("passwordMd5", "java.lang.String");
		fields.put("xxLocatorpreparId", "java.lang.Long");
		fields.put("xxLocatorchId", "java.lang.Long");
		fields.put("cWavesortcriteriaId", "java.lang.Long");
		fields.put("mLocatorshareId", "java.lang.Long");
		fields.put("adUserId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("adUserId", "AD_USER_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("supervisorId", "SUPERVISOR_ID");
		aliases.put("cBpartnerId", "C_BPARTNER_ID");
		aliases.put("cBpartnerLocationId", "C_BPARTNER_LOCATION_ID");
		aliases.put("cGreetingId", "C_GREETING_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("cJobId", "C_JOB_ID");
		aliases.put("adTreeMenufavoriteId", "AD_TREE_MENUFAVORITE_ID");
		aliases.put("adTreeMenunewId", "AD_TREE_MENUNEW_ID");
		aliases.put("xxIsabsent", "XX_ISABSENT");
		aliases.put("xxIsbonusmodif", "XX_ISBONUSMODIF");
		aliases.put("xxIspmmodif", "XX_ISPMMODIF");
		aliases.put("userDir", "USER_DIR");
		aliases.put("xxChangepaymentterm", "XX_CHANGEPAYMENTTERM");
		aliases.put("xxIsprodsurcommande", "XX_ISPRODSURCOMMANDE");
		aliases.put("xxRecsupervisorId", "XX_RECSUPERVISOR_ID");
		aliases.put("xxTempsupervisorId", "XX_TEMPSUPERVISOR_ID");
		aliases.put("passwordMd5", "PASSWORD_MD5");
		aliases.put("xxLocatorpreparId", "XX_LOCATORPREPAR_ID");
		aliases.put("xxLocatorchId", "XX_LOCATORCH_ID");
		aliases.put("cWavesortcriteriaId", "C_WAVESORTCRITERIA_ID");
		aliases.put("mLocatorshareId", "M_LOCATORSHARE_ID");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("IDX$$_00010007");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("xxIsabsent", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeAdUser".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeAdUser(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.AdUser");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("AD_USER");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "AD_USER_ID", long.class, "adUserId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.VARCHAR, "NAME", String.class, "name"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.VARCHAR, "PASSWORD", String.class, "password"),
				new JdbcTypeField(Types.VARCHAR, "EMAIL", String.class, "email"),
				new JdbcTypeField(Types.BIGINT, "SUPERVISOR_ID", Long.class, "supervisorId"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_ID", Long.class, "cBpartnerId"),
				new JdbcTypeField(Types.CHAR, "PROCESSING", String.class, "processing"),
				new JdbcTypeField(Types.VARCHAR, "EMAILUSER", String.class, "emailuser"),
				new JdbcTypeField(Types.VARCHAR, "EMAILUSERPW", String.class, "emailuserpw"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_LOCATION_ID", Long.class, "cBpartnerLocationId"),
				new JdbcTypeField(Types.BIGINT, "C_GREETING_ID", Long.class, "cGreetingId"),
				new JdbcTypeField(Types.VARCHAR, "TITLE", String.class, "title"),
				new JdbcTypeField(Types.VARCHAR, "COMMENTS", String.class, "comments"),
				new JdbcTypeField(Types.VARCHAR, "PHONE", String.class, "phone"),
				new JdbcTypeField(Types.VARCHAR, "PHONE2", String.class, "phone2"),
				new JdbcTypeField(Types.VARCHAR, "FAX", String.class, "fax"),
				new JdbcTypeField(Types.DATE, "LASTCONTACT", Date.class, "lastcontact"),
				new JdbcTypeField(Types.VARCHAR, "LASTRESULT", String.class, "lastresult"),
				new JdbcTypeField(Types.DATE, "BIRTHDAY", Date.class, "birthday"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.VARCHAR, "EMAILVERIFY", String.class, "emailverify"),
				new JdbcTypeField(Types.BIGINT, "C_JOB_ID", Long.class, "cJobId"),
				new JdbcTypeField(Types.DATE, "EMAILVERIFYDATE", Date.class, "emailverifydate"),
				new JdbcTypeField(Types.CHAR, "ISFULLBPACCESS", String.class, "isfullbpaccess"),
				new JdbcTypeField(Types.VARCHAR, "LDAPUSER", String.class, "ldapuser"),
				new JdbcTypeField(Types.CHAR, "NOTIFICATIONTYPE", String.class, "notificationtype"),
				new JdbcTypeField(Types.CHAR, "CONNECTIONPROFILE", String.class, "connectionprofile"),
				new JdbcTypeField(Types.VARCHAR, "VALUE", String.class, "value"),
				new JdbcTypeField(Types.BIGINT, "AD_TREE_MENUFAVORITE_ID", Long.class, "adTreeMenufavoriteId"),
				new JdbcTypeField(Types.BIGINT, "AD_TREE_MENUNEW_ID", Long.class, "adTreeMenunewId"),
				new JdbcTypeField(Types.VARCHAR, "BOUNCEDINFO", String.class, "bouncedinfo"),
				new JdbcTypeField(Types.CHAR, "ISEMAILBOUNCED", String.class, "isemailbounced"),
				new JdbcTypeField(Types.DATE, "LASTREGISTRATIONREMINDER", Date.class, "lastregistrationreminder"),
				new JdbcTypeField(Types.CHAR, "XX_ISABSENT", String.class, "xxIsabsent"),
				new JdbcTypeField(Types.CHAR, "ISINPAYROLL", String.class, "isinpayroll"),
				new JdbcTypeField(Types.CHAR, "XX_ISBONUSMODIF", String.class, "xxIsbonusmodif"),
				new JdbcTypeField(Types.CHAR, "XX_ISPMMODIF", String.class, "xxIspmmodif"),
				new JdbcTypeField(Types.VARCHAR, "USER_DIR", String.class, "userDir"),
				new JdbcTypeField(Types.CHAR, "XX_CHANGEPAYMENTTERM", String.class, "xxChangepaymentterm"),
				new JdbcTypeField(Types.CHAR, "XX_ISPRODSURCOMMANDE", String.class, "xxIsprodsurcommande"),
				new JdbcTypeField(Types.CHAR, "ISEXCLUDE", String.class, "isexclude"),
				new JdbcTypeField(Types.BIGINT, "XX_RECSUPERVISOR_ID", Long.class, "xxRecsupervisorId"),
				new JdbcTypeField(Types.BIGINT, "XX_TEMPSUPERVISOR_ID", Long.class, "xxTempsupervisorId"),
				new JdbcTypeField(Types.VARCHAR, "PASSWORD_MD5", String.class, "passwordMd5"),
				new JdbcTypeField(Types.BIGINT, "XX_LOCATORPREPAR_ID", Long.class, "xxLocatorpreparId"),
				new JdbcTypeField(Types.BIGINT, "XX_LOCATORCH_ID", Long.class, "xxLocatorchId"),
				new JdbcTypeField(Types.BIGINT, "C_WAVESORTCRITERIA_ID", Long.class, "cWavesortcriteriaId"),
				new JdbcTypeField(Types.BIGINT, "M_LOCATORSHARE_ID", Long.class, "mLocatorshareId"));

		return type;
	}

	/**
	 * Create configuration for cache "CBpartnerCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheCBpartnerCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("CBpartnerCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeCBpartner(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.CBpartner");
		qryEntity.setTableName("C_BPARTNER");
		qryEntity.setKeyFieldName("cBpartnerId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("cBpartnerId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("value", "java.lang.String");
		fields.put("name", "java.lang.String");
		fields.put("name2", "java.lang.String");
		fields.put("description", "java.lang.String");
		fields.put("issummary", "java.lang.String");
		fields.put("cBpGroupId", "java.lang.Long");
		fields.put("isonetime", "java.lang.String");
		fields.put("isprospect", "java.lang.String");
		fields.put("isvendor", "java.lang.String");
		fields.put("iscustomer", "java.lang.String");
		fields.put("isemployee", "java.lang.String");
		fields.put("issalesrep", "java.lang.String");
		fields.put("referenceno", "java.lang.String");
		fields.put("duns", "java.lang.String");
		fields.put("url", "java.lang.String");
		fields.put("adLanguage", "java.lang.String");
		fields.put("taxid", "java.lang.String");
		fields.put("istaxexempt", "java.lang.String");
		fields.put("cInvoicescheduleId", "java.lang.Long");
		fields.put("rating", "java.lang.String");
		fields.put("salesvolume", "java.lang.Long");
		fields.put("numberemployees", "java.lang.Long");
		fields.put("naics", "java.lang.String");
		fields.put("firstsale", "java.sql.Date");
		fields.put("acqusitioncost", "java.math.BigDecimal");
		fields.put("potentiallifetimevalue", "java.math.BigDecimal");
		fields.put("actuallifetimevalue", "java.math.BigDecimal");
		fields.put("shareofcustomer", "java.lang.Long");
		fields.put("paymentrule", "java.lang.String");
		fields.put("soCreditlimit", "java.math.BigDecimal");
		fields.put("soCreditused", "java.math.BigDecimal");
		fields.put("cPaymenttermId", "java.lang.Long");
		fields.put("mPricelistId", "java.lang.Long");
		fields.put("mDiscountschemaId", "java.lang.Long");
		fields.put("cDunningId", "java.lang.Long");
		fields.put("isdiscountprinted", "java.lang.String");
		fields.put("soDescription", "java.lang.String");
		fields.put("poreference", "java.lang.String");
		fields.put("paymentrulepo", "java.lang.String");
		fields.put("poPricelistId", "java.lang.Long");
		fields.put("poDiscountschemaId", "java.lang.Long");
		fields.put("poPaymenttermId", "java.lang.Long");
		fields.put("documentcopies", "java.lang.Long");
		fields.put("cGreetingId", "java.lang.Long");
		fields.put("invoicerule", "java.lang.String");
		fields.put("deliveryrule", "java.lang.String");
		fields.put("freightcostrule", "java.lang.String");
		fields.put("deliveryviarule", "java.lang.String");
		fields.put("salesrepId", "java.lang.Long");
		fields.put("sendemail", "java.lang.String");
		fields.put("bpartnerParentId", "java.lang.Long");
		fields.put("invoicePrintformatId", "java.lang.Long");
		fields.put("socreditstatus", "java.lang.String");
		fields.put("shelflifeminpct", "java.lang.Long");
		fields.put("adOrgbpId", "java.lang.Long");
		fields.put("flatdiscount", "java.math.BigDecimal");
		fields.put("totalopenbalance", "java.math.BigDecimal");
		fields.put("zsubpaymentruleId", "java.lang.Long");
		fields.put("zsubpaymentrulepoId", "java.lang.Long");
		fields.put("zcreditmessage", "java.lang.String");
		fields.put("zShipmentPrintformatId", "java.lang.Long");
		fields.put("zIncotermsId", "java.lang.Long");
		fields.put("cBpSizeId", "java.lang.Long");
		fields.put("cBpStatusId", "java.lang.Long");
		fields.put("cIndustrycodeId", "java.lang.Long");
		fields.put("cConsolidationreferenceId", "java.lang.Long");
		fields.put("mReturnpolicyId", "java.lang.Long");
		fields.put("poReturnpolicyId", "java.lang.Long");
		fields.put("orderPrintformatId", "java.lang.Long");
		fields.put("zsubcontractinglocatorId", "java.lang.Long");
		fields.put("xxRc", "java.lang.String");
		fields.put("xxAi", "java.lang.String");
		fields.put("xxNis", "java.lang.String");
		fields.put("xxNif", "java.lang.String");
		fields.put("xxClasscustomer", "java.lang.String");
		fields.put("xxPaymenttermblId", "java.lang.Long");
		fields.put("xxPaymenttermblspecId", "java.lang.Long");
		fields.put("xxPaymenttermfactspecId", "java.lang.Long");
		fields.put("xxPaymenttermfactId", "java.lang.Long");
		fields.put("xxTempsalesrepId", "java.lang.Long");
		fields.put("percentage", "java.math.BigDecimal");
		fields.put("xxDiscountschemaId", "java.lang.Long");
		fields.put("type", "java.lang.String");
		fields.put("gdmpaymentrule", "java.lang.String");
		fields.put("xxBlackListe", "java.lang.String");
		fields.put("objectif", "java.math.BigDecimal");
		fields.put("xxObjectifrecouverementmois", "java.math.BigDecimal");
		fields.put("objectifAchatF", "java.math.BigDecimal");
		fields.put("objectifVenteF", "java.math.BigDecimal");
		fields.put("tauxRistourne", "java.lang.Long");
		fields.put("imporProd", "java.lang.String");
		fields.put("xxTypecommande", "java.lang.String");
		fields.put("xxDelegue", "java.lang.String");
		fields.put("jrLimitFct", "java.lang.Long");
		fields.put("jrLimitBl", "java.lang.Long");
		fields.put("isagreement", "java.lang.String");
		fields.put("objectifNbrClientMvt", "java.lang.Long");
		fields.put("objectifCaOper", "java.math.BigDecimal");
		fields.put("xxObjectifclient", "java.math.BigDecimal");
		fields.put("xxBpartnercategoryId", "java.lang.Long");
		fields.put("xxTiersfacturation", "java.lang.String");
		fields.put("xxAcceptug", "java.lang.String");
		fields.put("xxSeqorderexp", "java.lang.Long");
		fields.put("priorityno", "java.lang.Long");
		fields.put("xxSeqorderexps", "java.lang.Long");
		fields.put("duninggracedays", "java.lang.Long");
		fields.put("codecomptable", "java.lang.String");
		fields.put("xxPrimeprcnt", "java.math.BigDecimal");
		fields.put("xxCodeims", "java.lang.String");
		fields.put("soCreditlimitbl", "java.math.BigDecimal");
		fields.put("socreditstatusbl", "java.lang.String");
		fields.put("soCreditusedbl", "java.math.BigDecimal");
		fields.put("xxSoumiapprobation", "java.lang.String");
		fields.put("adImageId", "java.lang.Long");
		fields.put("discountreward", "java.math.BigDecimal");
		fields.put("password", "java.lang.String");
		fields.put("xxUg", "java.math.BigDecimal");
		fields.put("xxImscode", "java.lang.String");
		fields.put("updatedsalesrep", "java.sql.Date");
		fields.put("xxBpartnerbalancereset", "java.lang.String");
		fields.put("cBpartnerId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("cBpartnerId", "C_BPARTNER_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cBpGroupId", "C_BP_GROUP_ID");
		aliases.put("adLanguage", "AD_LANGUAGE");
		aliases.put("cInvoicescheduleId", "C_INVOICESCHEDULE_ID");
		aliases.put("soCreditlimit", "SO_CREDITLIMIT");
		aliases.put("soCreditused", "SO_CREDITUSED");
		aliases.put("cPaymenttermId", "C_PAYMENTTERM_ID");
		aliases.put("mPricelistId", "M_PRICELIST_ID");
		aliases.put("mDiscountschemaId", "M_DISCOUNTSCHEMA_ID");
		aliases.put("cDunningId", "C_DUNNING_ID");
		aliases.put("soDescription", "SO_DESCRIPTION");
		aliases.put("poPricelistId", "PO_PRICELIST_ID");
		aliases.put("poDiscountschemaId", "PO_DISCOUNTSCHEMA_ID");
		aliases.put("poPaymenttermId", "PO_PAYMENTTERM_ID");
		aliases.put("cGreetingId", "C_GREETING_ID");
		aliases.put("salesrepId", "SALESREP_ID");
		aliases.put("bpartnerParentId", "BPARTNER_PARENT_ID");
		aliases.put("invoicePrintformatId", "INVOICE_PRINTFORMAT_ID");
		aliases.put("adOrgbpId", "AD_ORGBP_ID");
		aliases.put("zsubpaymentruleId", "ZSUBPAYMENTRULE_ID");
		aliases.put("zsubpaymentrulepoId", "ZSUBPAYMENTRULEPO_ID");
		aliases.put("zShipmentPrintformatId", "Z_SHIPMENT_PRINTFORMAT_ID");
		aliases.put("zIncotermsId", "Z_INCOTERMS_ID");
		aliases.put("cBpSizeId", "C_BP_SIZE_ID");
		aliases.put("cBpStatusId", "C_BP_STATUS_ID");
		aliases.put("cIndustrycodeId", "C_INDUSTRYCODE_ID");
		aliases.put("cConsolidationreferenceId", "C_CONSOLIDATIONREFERENCE_ID");
		aliases.put("mReturnpolicyId", "M_RETURNPOLICY_ID");
		aliases.put("poReturnpolicyId", "PO_RETURNPOLICY_ID");
		aliases.put("orderPrintformatId", "ORDER_PRINTFORMAT_ID");
		aliases.put("zsubcontractinglocatorId", "ZSUBCONTRACTINGLOCATOR_ID");
		aliases.put("xxRc", "XX_RC");
		aliases.put("xxAi", "XX_AI");
		aliases.put("xxNis", "XX_NIS");
		aliases.put("xxNif", "XX_NIF");
		aliases.put("xxClasscustomer", "XX_CLASSCUSTOMER");
		aliases.put("xxPaymenttermblId", "XX_PAYMENTTERMBL_ID");
		aliases.put("xxPaymenttermblspecId", "XX_PAYMENTTERMBLSPEC_ID");
		aliases.put("xxPaymenttermfactspecId", "XX_PAYMENTTERMFACTSPEC_ID");
		aliases.put("xxPaymenttermfactId", "XX_PAYMENTTERMFACT_ID");
		aliases.put("xxTempsalesrepId", "XX_TEMPSALESREP_ID");
		aliases.put("xxDiscountschemaId", "XX_DISCOUNTSCHEMA_ID");
		aliases.put("xxBlackListe", "XX_BLACK_LISTE");
		aliases.put("xxObjectifrecouverementmois", "XX_OBJECTIFRECOUVEREMENTMOIS");
		aliases.put("objectifAchatF", "OBJECTIF_ACHAT_F");
		aliases.put("objectifVenteF", "OBJECTIF_VENTE_F");
		aliases.put("tauxRistourne", "TAUX_RISTOURNE");
		aliases.put("imporProd", "IMPOR_PROD");
		aliases.put("xxTypecommande", "XX_TYPECOMMANDE");
		aliases.put("xxDelegue", "XX_DELEGUE");
		aliases.put("jrLimitFct", "JR_LIMIT_FCT");
		aliases.put("jrLimitBl", "JR_LIMIT_BL");
		aliases.put("objectifNbrClientMvt", "OBJECTIF_NBR_CLIENT_MVT");
		aliases.put("objectifCaOper", "OBJECTIF_CA_OPER");
		aliases.put("xxObjectifclient", "XX_OBJECTIFCLIENT");
		aliases.put("xxBpartnercategoryId", "XX_BPARTNERCATEGORY_ID");
		aliases.put("xxTiersfacturation", "XX_TIERSFACTURATION");
		aliases.put("xxAcceptug", "XX_ACCEPTUG");
		aliases.put("xxSeqorderexp", "XX_SEQORDEREXP");
		aliases.put("xxSeqorderexps", "XX_SEQORDEREXPS");
		aliases.put("xxPrimeprcnt", "XX_PRIMEPRCNT");
		aliases.put("xxCodeims", "XX_CODEIMS");
		aliases.put("soCreditlimitbl", "SO_CREDITLIMITBL");
		aliases.put("soCreditusedbl", "SO_CREDITUSEDBL");
		aliases.put("xxSoumiapprobation", "XX_SOUMIAPPROBATION");
		aliases.put("adImageId", "AD_IMAGE_ID");
		aliases.put("xxUg", "XX_UG");
		aliases.put("xxImscode", "XX_IMSCODE");
		aliases.put("xxBpartnerbalancereset", "XX_BPARTNERBALANCERESET");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("C_BPARTNER_BPORG");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("adOrgbpId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_BPARTNER_NAME");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("name", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_BPARTNER_VALUE");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("adClientId", false);
		indFlds.put("value", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeCBpartner".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeCBpartner(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.CBpartner");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("C_BPARTNER");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "C_BPARTNER_ID", long.class, "cBpartnerId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.VARCHAR, "VALUE", String.class, "value"),
				new JdbcTypeField(Types.VARCHAR, "NAME", String.class, "name"),
				new JdbcTypeField(Types.VARCHAR, "NAME2", String.class, "name2"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.CHAR, "ISSUMMARY", String.class, "issummary"),
				new JdbcTypeField(Types.BIGINT, "C_BP_GROUP_ID", long.class, "cBpGroupId"),
				new JdbcTypeField(Types.CHAR, "ISONETIME", String.class, "isonetime"),
				new JdbcTypeField(Types.CHAR, "ISPROSPECT", String.class, "isprospect"),
				new JdbcTypeField(Types.CHAR, "ISVENDOR", String.class, "isvendor"),
				new JdbcTypeField(Types.CHAR, "ISCUSTOMER", String.class, "iscustomer"),
				new JdbcTypeField(Types.CHAR, "ISEMPLOYEE", String.class, "isemployee"),
				new JdbcTypeField(Types.CHAR, "ISSALESREP", String.class, "issalesrep"),
				new JdbcTypeField(Types.VARCHAR, "REFERENCENO", String.class, "referenceno"),
				new JdbcTypeField(Types.VARCHAR, "DUNS", String.class, "duns"),
				new JdbcTypeField(Types.VARCHAR, "URL", String.class, "url"),
				new JdbcTypeField(Types.VARCHAR, "AD_LANGUAGE", String.class, "adLanguage"),
				new JdbcTypeField(Types.VARCHAR, "TAXID", String.class, "taxid"),
				new JdbcTypeField(Types.CHAR, "ISTAXEXEMPT", String.class, "istaxexempt"),
				new JdbcTypeField(Types.BIGINT, "C_INVOICESCHEDULE_ID", Long.class, "cInvoicescheduleId"),
				new JdbcTypeField(Types.CHAR, "RATING", String.class, "rating"),
				new JdbcTypeField(Types.BIGINT, "SALESVOLUME", Long.class, "salesvolume"),
				new JdbcTypeField(Types.BIGINT, "NUMBEREMPLOYEES", Long.class, "numberemployees"),
				new JdbcTypeField(Types.VARCHAR, "NAICS", String.class, "naics"),
				new JdbcTypeField(Types.DATE, "FIRSTSALE", Date.class, "firstsale"),
				new JdbcTypeField(Types.NUMERIC, "ACQUSITIONCOST", BigDecimal.class, "acqusitioncost"),
				new JdbcTypeField(Types.NUMERIC, "POTENTIALLIFETIMEVALUE", BigDecimal.class, "potentiallifetimevalue"),
				new JdbcTypeField(Types.NUMERIC, "ACTUALLIFETIMEVALUE", BigDecimal.class, "actuallifetimevalue"),
				new JdbcTypeField(Types.BIGINT, "SHAREOFCUSTOMER", Long.class, "shareofcustomer"),
				new JdbcTypeField(Types.CHAR, "PAYMENTRULE", String.class, "paymentrule"),
				new JdbcTypeField(Types.NUMERIC, "SO_CREDITLIMIT", BigDecimal.class, "soCreditlimit"),
				new JdbcTypeField(Types.NUMERIC, "SO_CREDITUSED", BigDecimal.class, "soCreditused"),
				new JdbcTypeField(Types.BIGINT, "C_PAYMENTTERM_ID", Long.class, "cPaymenttermId"),
				new JdbcTypeField(Types.BIGINT, "M_PRICELIST_ID", Long.class, "mPricelistId"),
				new JdbcTypeField(Types.BIGINT, "M_DISCOUNTSCHEMA_ID", Long.class, "mDiscountschemaId"),
				new JdbcTypeField(Types.BIGINT, "C_DUNNING_ID", Long.class, "cDunningId"),
				new JdbcTypeField(Types.CHAR, "ISDISCOUNTPRINTED", String.class, "isdiscountprinted"),
				new JdbcTypeField(Types.VARCHAR, "SO_DESCRIPTION", String.class, "soDescription"),
				new JdbcTypeField(Types.VARCHAR, "POREFERENCE", String.class, "poreference"),
				new JdbcTypeField(Types.CHAR, "PAYMENTRULEPO", String.class, "paymentrulepo"),
				new JdbcTypeField(Types.BIGINT, "PO_PRICELIST_ID", Long.class, "poPricelistId"),
				new JdbcTypeField(Types.BIGINT, "PO_DISCOUNTSCHEMA_ID", Long.class, "poDiscountschemaId"),
				new JdbcTypeField(Types.BIGINT, "PO_PAYMENTTERM_ID", Long.class, "poPaymenttermId"),
				new JdbcTypeField(Types.BIGINT, "DOCUMENTCOPIES", Long.class, "documentcopies"),
				new JdbcTypeField(Types.BIGINT, "C_GREETING_ID", Long.class, "cGreetingId"),
				new JdbcTypeField(Types.CHAR, "INVOICERULE", String.class, "invoicerule"),
				new JdbcTypeField(Types.CHAR, "DELIVERYRULE", String.class, "deliveryrule"),
				new JdbcTypeField(Types.CHAR, "FREIGHTCOSTRULE", String.class, "freightcostrule"),
				new JdbcTypeField(Types.CHAR, "DELIVERYVIARULE", String.class, "deliveryviarule"),
				new JdbcTypeField(Types.BIGINT, "SALESREP_ID", Long.class, "salesrepId"),
				new JdbcTypeField(Types.CHAR, "SENDEMAIL", String.class, "sendemail"),
				new JdbcTypeField(Types.BIGINT, "BPARTNER_PARENT_ID", Long.class, "bpartnerParentId"),
				new JdbcTypeField(Types.BIGINT, "INVOICE_PRINTFORMAT_ID", Long.class, "invoicePrintformatId"),
				new JdbcTypeField(Types.CHAR, "SOCREDITSTATUS", String.class, "socreditstatus"),
				new JdbcTypeField(Types.BIGINT, "SHELFLIFEMINPCT", Long.class, "shelflifeminpct"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGBP_ID", Long.class, "adOrgbpId"),
				new JdbcTypeField(Types.NUMERIC, "FLATDISCOUNT", BigDecimal.class, "flatdiscount"),
				new JdbcTypeField(Types.NUMERIC, "TOTALOPENBALANCE", BigDecimal.class, "totalopenbalance"),
				new JdbcTypeField(Types.BIGINT, "ZSUBPAYMENTRULE_ID", Long.class, "zsubpaymentruleId"),
				new JdbcTypeField(Types.BIGINT, "ZSUBPAYMENTRULEPO_ID", Long.class, "zsubpaymentrulepoId"),
				new JdbcTypeField(Types.VARCHAR, "ZCREDITMESSAGE", String.class, "zcreditmessage"),
				new JdbcTypeField(Types.BIGINT, "Z_SHIPMENT_PRINTFORMAT_ID", Long.class, "zShipmentPrintformatId"),
				new JdbcTypeField(Types.BIGINT, "Z_INCOTERMS_ID", Long.class, "zIncotermsId"),
				new JdbcTypeField(Types.BIGINT, "C_BP_SIZE_ID", Long.class, "cBpSizeId"),
				new JdbcTypeField(Types.BIGINT, "C_BP_STATUS_ID", Long.class, "cBpStatusId"),
				new JdbcTypeField(Types.BIGINT, "C_INDUSTRYCODE_ID", Long.class, "cIndustrycodeId"),
				new JdbcTypeField(Types.BIGINT, "C_CONSOLIDATIONREFERENCE_ID", Long.class, "cConsolidationreferenceId"),
				new JdbcTypeField(Types.BIGINT, "M_RETURNPOLICY_ID", Long.class, "mReturnpolicyId"),
				new JdbcTypeField(Types.BIGINT, "PO_RETURNPOLICY_ID", Long.class, "poReturnpolicyId"),
				new JdbcTypeField(Types.BIGINT, "ORDER_PRINTFORMAT_ID", Long.class, "orderPrintformatId"),
				new JdbcTypeField(Types.BIGINT, "ZSUBCONTRACTINGLOCATOR_ID", Long.class, "zsubcontractinglocatorId"),
				new JdbcTypeField(Types.VARCHAR, "XX_RC", String.class, "xxRc"),
				new JdbcTypeField(Types.VARCHAR, "XX_AI", String.class, "xxAi"),
				new JdbcTypeField(Types.VARCHAR, "XX_NIS", String.class, "xxNis"),
				new JdbcTypeField(Types.VARCHAR, "XX_NIF", String.class, "xxNif"),
				new JdbcTypeField(Types.CHAR, "XX_CLASSCUSTOMER", String.class, "xxClasscustomer"),
				new JdbcTypeField(Types.BIGINT, "XX_PAYMENTTERMBL_ID", Long.class, "xxPaymenttermblId"),
				new JdbcTypeField(Types.BIGINT, "XX_PAYMENTTERMBLSPEC_ID", Long.class, "xxPaymenttermblspecId"),
				new JdbcTypeField(Types.BIGINT, "XX_PAYMENTTERMFACTSPEC_ID", Long.class, "xxPaymenttermfactspecId"),
				new JdbcTypeField(Types.BIGINT, "XX_PAYMENTTERMFACT_ID", Long.class, "xxPaymenttermfactId"),
				new JdbcTypeField(Types.BIGINT, "XX_TEMPSALESREP_ID", Long.class, "xxTempsalesrepId"),
				new JdbcTypeField(Types.NUMERIC, "PERCENTAGE", BigDecimal.class, "percentage"),
				new JdbcTypeField(Types.BIGINT, "XX_DISCOUNTSCHEMA_ID", Long.class, "xxDiscountschemaId"),
				new JdbcTypeField(Types.CHAR, "TYPE", String.class, "type"),
				new JdbcTypeField(Types.CHAR, "GDMPAYMENTRULE", String.class, "gdmpaymentrule"),
				new JdbcTypeField(Types.CHAR, "XX_BLACK_LISTE", String.class, "xxBlackListe"),
				new JdbcTypeField(Types.NUMERIC, "OBJECTIF", BigDecimal.class, "objectif"),
				new JdbcTypeField(Types.NUMERIC, "XX_OBJECTIFRECOUVEREMENTMOIS", BigDecimal.class,
						"xxObjectifrecouverementmois"),
				new JdbcTypeField(Types.NUMERIC, "OBJECTIF_ACHAT_F", BigDecimal.class, "objectifAchatF"),
				new JdbcTypeField(Types.NUMERIC, "OBJECTIF_VENTE_F", BigDecimal.class, "objectifVenteF"),
				new JdbcTypeField(Types.BIGINT, "TAUX_RISTOURNE", Long.class, "tauxRistourne"),
				new JdbcTypeField(Types.CHAR, "IMPOR_PROD", String.class, "imporProd"),
				new JdbcTypeField(Types.CHAR, "XX_TYPECOMMANDE", String.class, "xxTypecommande"),
				new JdbcTypeField(Types.VARCHAR, "XX_DELEGUE", String.class, "xxDelegue"),
				new JdbcTypeField(Types.BIGINT, "JR_LIMIT_FCT", Long.class, "jrLimitFct"),
				new JdbcTypeField(Types.BIGINT, "JR_LIMIT_BL", Long.class, "jrLimitBl"),
				new JdbcTypeField(Types.CHAR, "ISAGREEMENT", String.class, "isagreement"),
				new JdbcTypeField(Types.BIGINT, "OBJECTIF_NBR_CLIENT_MVT", Long.class, "objectifNbrClientMvt"),
				new JdbcTypeField(Types.NUMERIC, "OBJECTIF_CA_OPER", BigDecimal.class, "objectifCaOper"),
				new JdbcTypeField(Types.NUMERIC, "XX_OBJECTIFCLIENT", BigDecimal.class, "xxObjectifclient"),
				new JdbcTypeField(Types.BIGINT, "XX_BPARTNERCATEGORY_ID", Long.class, "xxBpartnercategoryId"),
				new JdbcTypeField(Types.CHAR, "XX_TIERSFACTURATION", String.class, "xxTiersfacturation"),
				new JdbcTypeField(Types.CHAR, "XX_ACCEPTUG", String.class, "xxAcceptug"),
				new JdbcTypeField(Types.BIGINT, "XX_SEQORDEREXP", long.class, "xxSeqorderexp"),
				new JdbcTypeField(Types.BIGINT, "PRIORITYNO", Long.class, "priorityno"),
				new JdbcTypeField(Types.BIGINT, "XX_SEQORDEREXPS", long.class, "xxSeqorderexps"),
				new JdbcTypeField(Types.BIGINT, "DUNINGGRACEDAYS", Long.class, "duninggracedays"),
				new JdbcTypeField(Types.VARCHAR, "CODECOMPTABLE", String.class, "codecomptable"),
				new JdbcTypeField(Types.NUMERIC, "XX_PRIMEPRCNT", BigDecimal.class, "xxPrimeprcnt"),
				new JdbcTypeField(Types.VARCHAR, "XX_CODEIMS", String.class, "xxCodeims"),
				new JdbcTypeField(Types.NUMERIC, "SO_CREDITLIMITBL", BigDecimal.class, "soCreditlimitbl"),
				new JdbcTypeField(Types.CHAR, "SOCREDITSTATUSBL", String.class, "socreditstatusbl"),
				new JdbcTypeField(Types.NUMERIC, "SO_CREDITUSEDBL", BigDecimal.class, "soCreditusedbl"),
				new JdbcTypeField(Types.CHAR, "XX_SOUMIAPPROBATION", String.class, "xxSoumiapprobation"),
				new JdbcTypeField(Types.BIGINT, "AD_IMAGE_ID", Long.class, "adImageId"),
				new JdbcTypeField(Types.NUMERIC, "DISCOUNTREWARD", BigDecimal.class, "discountreward"),
				new JdbcTypeField(Types.VARCHAR, "PASSWORD", String.class, "password"),
				new JdbcTypeField(Types.NUMERIC, "XX_UG", BigDecimal.class, "xxUg"),
				new JdbcTypeField(Types.VARCHAR, "XX_IMSCODE", String.class, "xxImscode"),
				new JdbcTypeField(Types.DATE, "UPDATEDSALESREP", Date.class, "updatedsalesrep"),
				new JdbcTypeField(Types.CHAR, "XX_BPARTNERBALANCERESET", String.class, "xxBpartnerbalancereset"));

		return type;
	}

	/**
	 * Create configuration for cache "CInvoiceCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheCInvoiceCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("CInvoiceCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeCInvoice(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.CInvoice");
		qryEntity.setTableName("C_INVOICE");
		qryEntity.setKeyFieldName("cInvoiceId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("cInvoiceId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("issotrx", "java.lang.String");
		fields.put("documentno", "java.lang.String");
		fields.put("docstatus", "java.lang.String");
		fields.put("docaction", "java.lang.String");
		fields.put("processing", "java.lang.String");
		fields.put("processed", "java.lang.String");
		fields.put("posted", "java.lang.String");
		fields.put("cDoctypeId", "java.lang.Long");
		fields.put("cDoctypetargetId", "java.lang.Long");
		fields.put("cOrderId", "java.lang.Long");
		fields.put("description", "java.lang.String");
		fields.put("isapproved", "java.lang.String");
		fields.put("istransferred", "java.lang.String");
		fields.put("isprinted", "java.lang.String");
		fields.put("salesrepId", "java.lang.Long");
		fields.put("dateinvoiced", "java.sql.Date");
		fields.put("dateprinted", "java.sql.Date");
		fields.put("dateacct", "java.sql.Date");
		fields.put("cBpartnerId", "java.lang.Long");
		fields.put("cBpartnerLocationId", "java.lang.Long");
		fields.put("poreference", "java.lang.String");
		fields.put("isdiscountprinted", "java.lang.String");
		fields.put("dateordered", "java.sql.Date");
		fields.put("cCurrencyId", "java.lang.Long");
		fields.put("paymentrule", "java.lang.String");
		fields.put("cPaymenttermId", "java.lang.Long");
		fields.put("cChargeId", "java.lang.Long");
		fields.put("chargeamt", "java.math.BigDecimal");
		fields.put("totallines", "java.math.BigDecimal");
		fields.put("grandtotal", "java.math.BigDecimal");
		fields.put("mPricelistId", "java.lang.Long");
		fields.put("istaxincluded", "java.lang.String");
		fields.put("cCampaignId", "java.lang.Long");
		fields.put("cProjectId", "java.lang.Long");
		fields.put("cActivityId", "java.lang.Long");
		fields.put("ispaid", "java.lang.String");
		fields.put("cPaymentId", "java.lang.Long");
		fields.put("cCashlineId", "java.lang.Long");
		fields.put("createfrom", "java.lang.String");
		fields.put("generateto", "java.lang.String");
		fields.put("sendemail", "java.lang.String");
		fields.put("adUserId", "java.lang.Long");
		fields.put("copyfrom", "java.lang.String");
		fields.put("isselfservice", "java.lang.String");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("user1Id", "java.lang.Long");
		fields.put("user2Id", "java.lang.Long");
		fields.put("cConversiontypeId", "java.lang.Long");
		fields.put("ispayschedulevalid", "java.lang.String");
		fields.put("refInvoiceId", "java.lang.Long");
		fields.put("isindispute", "java.lang.String");
		fields.put("zsubpaymentruleId", "java.lang.Long");
		fields.put("zbpinvoice", "java.lang.String");
		fields.put("zPaymentcommunication", "java.lang.String");
		fields.put("invoicecollectiontype", "java.lang.String");
		fields.put("matchrequirementi", "java.lang.String");
		fields.put("cBpBankaccountId", "java.lang.Long");
		fields.put("isreturntrx", "java.lang.String");
		fields.put("cBpartnersrId", "java.lang.Long");
		fields.put("xxApplieddiscount", "java.lang.String");
		fields.put("xxSealedinvoice", "java.lang.String");
		fields.put("isdelivered", "java.lang.String");
		fields.put("isarchived", "java.lang.String");
		fields.put("issms", "java.lang.String");
		fields.put("cInvoiceId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("cInvoiceId", "C_INVOICE_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cDoctypeId", "C_DOCTYPE_ID");
		aliases.put("cDoctypetargetId", "C_DOCTYPETARGET_ID");
		aliases.put("cOrderId", "C_ORDER_ID");
		aliases.put("salesrepId", "SALESREP_ID");
		aliases.put("cBpartnerId", "C_BPARTNER_ID");
		aliases.put("cBpartnerLocationId", "C_BPARTNER_LOCATION_ID");
		aliases.put("cCurrencyId", "C_CURRENCY_ID");
		aliases.put("cPaymenttermId", "C_PAYMENTTERM_ID");
		aliases.put("cChargeId", "C_CHARGE_ID");
		aliases.put("mPricelistId", "M_PRICELIST_ID");
		aliases.put("cCampaignId", "C_CAMPAIGN_ID");
		aliases.put("cProjectId", "C_PROJECT_ID");
		aliases.put("cActivityId", "C_ACTIVITY_ID");
		aliases.put("cPaymentId", "C_PAYMENT_ID");
		aliases.put("cCashlineId", "C_CASHLINE_ID");
		aliases.put("adUserId", "AD_USER_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("user1Id", "USER1_ID");
		aliases.put("user2Id", "USER2_ID");
		aliases.put("cConversiontypeId", "C_CONVERSIONTYPE_ID");
		aliases.put("refInvoiceId", "REF_INVOICE_ID");
		aliases.put("zsubpaymentruleId", "ZSUBPAYMENTRULE_ID");
		aliases.put("zPaymentcommunication", "Z_PAYMENTCOMMUNICATION");
		aliases.put("cBpBankaccountId", "C_BP_BANKACCOUNT_ID");
		aliases.put("cBpartnersrId", "C_BPARTNERSR_ID");
		aliases.put("xxApplieddiscount", "XX_APPLIEDDISCOUNT");
		aliases.put("xxSealedinvoice", "XX_SEALEDINVOICE");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("C_INVOICE_BPARTNER");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_INVOICE_DOCUMENTNO");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("cDoctypeId", false);
		indFlds.put("documentno", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_INVOICE_ORDER");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cOrderId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_INVOICE_PAID");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("adClientId", false);
		indFlds.put("ispaid", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("IDX$$_00010008");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("docstatus", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("IDX$$_0001000F");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("docstatus", false);
		indFlds.put("cBpartnerId", false);
		indFlds.put("cOrderId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("IDX$$_00010068");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("adOrgId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("Z_INVOICE_4");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("ispayschedulevalid", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("Z_INVOICE_5");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("issotrx", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("Z_INVOICE_6");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("issotrx", false);
		indFlds.put("ispayschedulevalid", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeCInvoice".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeCInvoice(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.CInvoice");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("C_INVOICE");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "C_INVOICE_ID", long.class, "cInvoiceId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.CHAR, "ISSOTRX", String.class, "issotrx"),
				new JdbcTypeField(Types.VARCHAR, "DOCUMENTNO", String.class, "documentno"),
				new JdbcTypeField(Types.CHAR, "DOCSTATUS", String.class, "docstatus"),
				new JdbcTypeField(Types.CHAR, "DOCACTION", String.class, "docaction"),
				new JdbcTypeField(Types.CHAR, "PROCESSING", String.class, "processing"),
				new JdbcTypeField(Types.CHAR, "PROCESSED", String.class, "processed"),
				new JdbcTypeField(Types.CHAR, "POSTED", String.class, "posted"),
				new JdbcTypeField(Types.BIGINT, "C_DOCTYPE_ID", long.class, "cDoctypeId"),
				new JdbcTypeField(Types.BIGINT, "C_DOCTYPETARGET_ID", long.class, "cDoctypetargetId"),
				new JdbcTypeField(Types.BIGINT, "C_ORDER_ID", Long.class, "cOrderId"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.CHAR, "ISAPPROVED", String.class, "isapproved"),
				new JdbcTypeField(Types.CHAR, "ISTRANSFERRED", String.class, "istransferred"),
				new JdbcTypeField(Types.CHAR, "ISPRINTED", String.class, "isprinted"),
				new JdbcTypeField(Types.BIGINT, "SALESREP_ID", Long.class, "salesrepId"),
				new JdbcTypeField(Types.DATE, "DATEINVOICED", Date.class, "dateinvoiced"),
				new JdbcTypeField(Types.DATE, "DATEPRINTED", Date.class, "dateprinted"),
				new JdbcTypeField(Types.DATE, "DATEACCT", Date.class, "dateacct"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_ID", long.class, "cBpartnerId"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_LOCATION_ID", long.class, "cBpartnerLocationId"),
				new JdbcTypeField(Types.VARCHAR, "POREFERENCE", String.class, "poreference"),
				new JdbcTypeField(Types.CHAR, "ISDISCOUNTPRINTED", String.class, "isdiscountprinted"),
				new JdbcTypeField(Types.DATE, "DATEORDERED", Date.class, "dateordered"),
				new JdbcTypeField(Types.BIGINT, "C_CURRENCY_ID", long.class, "cCurrencyId"),
				new JdbcTypeField(Types.CHAR, "PAYMENTRULE", String.class, "paymentrule"),
				new JdbcTypeField(Types.BIGINT, "C_PAYMENTTERM_ID", long.class, "cPaymenttermId"),
				new JdbcTypeField(Types.BIGINT, "C_CHARGE_ID", Long.class, "cChargeId"),
				new JdbcTypeField(Types.NUMERIC, "CHARGEAMT", BigDecimal.class, "chargeamt"),
				new JdbcTypeField(Types.NUMERIC, "TOTALLINES", BigDecimal.class, "totallines"),
				new JdbcTypeField(Types.NUMERIC, "GRANDTOTAL", BigDecimal.class, "grandtotal"),
				new JdbcTypeField(Types.BIGINT, "M_PRICELIST_ID", long.class, "mPricelistId"),
				new JdbcTypeField(Types.CHAR, "ISTAXINCLUDED", String.class, "istaxincluded"),
				new JdbcTypeField(Types.BIGINT, "C_CAMPAIGN_ID", Long.class, "cCampaignId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECT_ID", Long.class, "cProjectId"),
				new JdbcTypeField(Types.BIGINT, "C_ACTIVITY_ID", Long.class, "cActivityId"),
				new JdbcTypeField(Types.CHAR, "ISPAID", String.class, "ispaid"),
				new JdbcTypeField(Types.BIGINT, "C_PAYMENT_ID", Long.class, "cPaymentId"),
				new JdbcTypeField(Types.BIGINT, "C_CASHLINE_ID", Long.class, "cCashlineId"),
				new JdbcTypeField(Types.CHAR, "CREATEFROM", String.class, "createfrom"),
				new JdbcTypeField(Types.CHAR, "GENERATETO", String.class, "generateto"),
				new JdbcTypeField(Types.CHAR, "SENDEMAIL", String.class, "sendemail"),
				new JdbcTypeField(Types.BIGINT, "AD_USER_ID", Long.class, "adUserId"),
				new JdbcTypeField(Types.CHAR, "COPYFROM", String.class, "copyfrom"),
				new JdbcTypeField(Types.CHAR, "ISSELFSERVICE", String.class, "isselfservice"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.BIGINT, "USER1_ID", Long.class, "user1Id"),
				new JdbcTypeField(Types.BIGINT, "USER2_ID", Long.class, "user2Id"),
				new JdbcTypeField(Types.BIGINT, "C_CONVERSIONTYPE_ID", Long.class, "cConversiontypeId"),
				new JdbcTypeField(Types.CHAR, "ISPAYSCHEDULEVALID", String.class, "ispayschedulevalid"),
				new JdbcTypeField(Types.BIGINT, "REF_INVOICE_ID", Long.class, "refInvoiceId"),
				new JdbcTypeField(Types.CHAR, "ISINDISPUTE", String.class, "isindispute"),
				new JdbcTypeField(Types.BIGINT, "ZSUBPAYMENTRULE_ID", Long.class, "zsubpaymentruleId"),
				new JdbcTypeField(Types.VARCHAR, "ZBPINVOICE", String.class, "zbpinvoice"),
				new JdbcTypeField(Types.VARCHAR, "Z_PAYMENTCOMMUNICATION", String.class, "zPaymentcommunication"),
				new JdbcTypeField(Types.CHAR, "INVOICECOLLECTIONTYPE", String.class, "invoicecollectiontype"),
				new JdbcTypeField(Types.CHAR, "MATCHREQUIREMENTI", String.class, "matchrequirementi"),
				new JdbcTypeField(Types.BIGINT, "C_BP_BANKACCOUNT_ID", Long.class, "cBpBankaccountId"),
				new JdbcTypeField(Types.CHAR, "ISRETURNTRX", String.class, "isreturntrx"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNERSR_ID", Long.class, "cBpartnersrId"),
				new JdbcTypeField(Types.CHAR, "XX_APPLIEDDISCOUNT", String.class, "xxApplieddiscount"),
				new JdbcTypeField(Types.CHAR, "XX_SEALEDINVOICE", String.class, "xxSealedinvoice"),
				new JdbcTypeField(Types.CHAR, "ISDELIVERED", String.class, "isdelivered"),
				new JdbcTypeField(Types.CHAR, "ISARCHIVED", String.class, "isarchived"),
				new JdbcTypeField(Types.CHAR, "ISSMS", String.class, "issms"));

		return type;
	}

	/**
	 * Create configuration for cache "CInvoicelineCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheCInvoicelineCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("CInvoicelineCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeCInvoiceline(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.CInvoiceline");
		qryEntity.setTableName("C_INVOICELINE");
		qryEntity.setKeyFieldName("cInvoicelineId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("cInvoicelineId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("cInvoiceId", "java.lang.Long");
		fields.put("cOrderlineId", "java.lang.Long");
		fields.put("mInoutlineId", "java.lang.Long");
		fields.put("line", "java.lang.Long");
		fields.put("description", "java.lang.String");
		fields.put("mProductId", "java.lang.Long");
		fields.put("qtyinvoiced", "java.math.BigDecimal");
		fields.put("pricelist", "java.math.BigDecimal");
		fields.put("priceactual", "java.math.BigDecimal");
		fields.put("pricelimit", "java.math.BigDecimal");
		fields.put("linenetamt", "java.math.BigDecimal");
		fields.put("cChargeId", "java.lang.Long");
		fields.put("cUomId", "java.lang.Long");
		fields.put("cTaxId", "java.lang.Long");
		fields.put("sResourceassignmentId", "java.lang.Long");
		fields.put("aAssetId", "java.lang.Long");
		fields.put("taxamt", "java.math.BigDecimal");
		fields.put("mAttributesetinstanceId", "java.lang.Long");
		fields.put("isdescription", "java.lang.String");
		fields.put("isprinted", "java.lang.String");
		fields.put("linetotalamt", "java.math.BigDecimal");
		fields.put("refInvoicelineId", "java.lang.Long");
		fields.put("processed", "java.lang.String");
		fields.put("user1Id", "java.lang.Long");
		fields.put("user2Id", "java.lang.Long");
		fields.put("cProjectId", "java.lang.Long");
		fields.put("qtyentered", "java.math.BigDecimal");
		fields.put("priceentered", "java.math.BigDecimal");
		fields.put("zchargechange", "java.lang.String");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("cActivityId", "java.lang.Long");
		fields.put("cCampaignId", "java.lang.Long");
		fields.put("cProjectphaseId", "java.lang.Long");
		fields.put("cProjecttaskId", "java.lang.Long");
		fields.put("rramt", "java.math.BigDecimal");
		fields.put("rrstartdate", "java.sql.Date");
		fields.put("linedocstatus", "java.lang.String");
		fields.put("isassetaddition", "java.lang.String");
		fields.put("xxIsapplaydiscount", "java.lang.String");
		fields.put("aCreateasset", "java.lang.String");
		fields.put("aProcessed", "java.lang.String");
		fields.put("aCapvsexp", "java.lang.String");
		fields.put("aAssetGroupId", "java.lang.Long");
		fields.put("repricing", "java.lang.String");
		fields.put("xxBlinvoicelineId", "java.lang.Long");
		fields.put("poDiscount", "java.math.BigDecimal");
		fields.put("ventilatecharge", "java.lang.String");
		fields.put("isreward", "java.lang.String");
		fields.put("cInvoicelineId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("cInvoicelineId", "C_INVOICELINE_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cInvoiceId", "C_INVOICE_ID");
		aliases.put("cOrderlineId", "C_ORDERLINE_ID");
		aliases.put("mInoutlineId", "M_INOUTLINE_ID");
		aliases.put("mProductId", "M_PRODUCT_ID");
		aliases.put("cChargeId", "C_CHARGE_ID");
		aliases.put("cUomId", "C_UOM_ID");
		aliases.put("cTaxId", "C_TAX_ID");
		aliases.put("sResourceassignmentId", "S_RESOURCEASSIGNMENT_ID");
		aliases.put("aAssetId", "A_ASSET_ID");
		aliases.put("mAttributesetinstanceId", "M_ATTRIBUTESETINSTANCE_ID");
		aliases.put("refInvoicelineId", "REF_INVOICELINE_ID");
		aliases.put("user1Id", "USER1_ID");
		aliases.put("user2Id", "USER2_ID");
		aliases.put("cProjectId", "C_PROJECT_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("cActivityId", "C_ACTIVITY_ID");
		aliases.put("cCampaignId", "C_CAMPAIGN_ID");
		aliases.put("cProjectphaseId", "C_PROJECTPHASE_ID");
		aliases.put("cProjecttaskId", "C_PROJECTTASK_ID");
		aliases.put("xxIsapplaydiscount", "XX_ISAPPLAYDISCOUNT");
		aliases.put("aCreateasset", "A_CREATEASSET");
		aliases.put("aProcessed", "A_PROCESSED");
		aliases.put("aCapvsexp", "A_CAPVSEXP");
		aliases.put("aAssetGroupId", "A_ASSET_GROUP_ID");
		aliases.put("xxBlinvoicelineId", "XX_BLINVOICELINE_ID");
		aliases.put("poDiscount", "PO_DISCOUNT");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("C_INVOICELINE_INOUTLINE");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("mInoutlineId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_INVOICELINE_INVOICE");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cInvoiceId", false);
		indFlds.put("cTaxId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_INVOICELINE_ORDERLINE");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cOrderlineId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_INVOICELINE_PRODUCT");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("mProductId", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeCInvoiceline".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeCInvoiceline(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.CInvoiceline");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("C_INVOICELINE");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "C_INVOICELINE_ID", long.class, "cInvoicelineId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.BIGINT, "C_INVOICE_ID", long.class, "cInvoiceId"),
				new JdbcTypeField(Types.BIGINT, "C_ORDERLINE_ID", Long.class, "cOrderlineId"),
				new JdbcTypeField(Types.BIGINT, "M_INOUTLINE_ID", Long.class, "mInoutlineId"),
				new JdbcTypeField(Types.BIGINT, "LINE", long.class, "line"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.BIGINT, "M_PRODUCT_ID", Long.class, "mProductId"),
				new JdbcTypeField(Types.NUMERIC, "QTYINVOICED", BigDecimal.class, "qtyinvoiced"),
				new JdbcTypeField(Types.NUMERIC, "PRICELIST", BigDecimal.class, "pricelist"),
				new JdbcTypeField(Types.NUMERIC, "PRICEACTUAL", BigDecimal.class, "priceactual"),
				new JdbcTypeField(Types.NUMERIC, "PRICELIMIT", BigDecimal.class, "pricelimit"),
				new JdbcTypeField(Types.NUMERIC, "LINENETAMT", BigDecimal.class, "linenetamt"),
				new JdbcTypeField(Types.BIGINT, "C_CHARGE_ID", Long.class, "cChargeId"),
				new JdbcTypeField(Types.BIGINT, "C_UOM_ID", Long.class, "cUomId"),
				new JdbcTypeField(Types.BIGINT, "C_TAX_ID", Long.class, "cTaxId"),
				new JdbcTypeField(Types.BIGINT, "S_RESOURCEASSIGNMENT_ID", Long.class, "sResourceassignmentId"),
				new JdbcTypeField(Types.BIGINT, "A_ASSET_ID", Long.class, "aAssetId"),
				new JdbcTypeField(Types.NUMERIC, "TAXAMT", BigDecimal.class, "taxamt"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESETINSTANCE_ID", Long.class, "mAttributesetinstanceId"),
				new JdbcTypeField(Types.CHAR, "ISDESCRIPTION", String.class, "isdescription"),
				new JdbcTypeField(Types.CHAR, "ISPRINTED", String.class, "isprinted"),
				new JdbcTypeField(Types.NUMERIC, "LINETOTALAMT", BigDecimal.class, "linetotalamt"),
				new JdbcTypeField(Types.BIGINT, "REF_INVOICELINE_ID", Long.class, "refInvoicelineId"),
				new JdbcTypeField(Types.CHAR, "PROCESSED", String.class, "processed"),
				new JdbcTypeField(Types.BIGINT, "USER1_ID", Long.class, "user1Id"),
				new JdbcTypeField(Types.BIGINT, "USER2_ID", Long.class, "user2Id"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECT_ID", Long.class, "cProjectId"),
				new JdbcTypeField(Types.NUMERIC, "QTYENTERED", BigDecimal.class, "qtyentered"),
				new JdbcTypeField(Types.NUMERIC, "PRICEENTERED", BigDecimal.class, "priceentered"),
				new JdbcTypeField(Types.CHAR, "ZCHARGECHANGE", String.class, "zchargechange"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.BIGINT, "C_ACTIVITY_ID", Long.class, "cActivityId"),
				new JdbcTypeField(Types.BIGINT, "C_CAMPAIGN_ID", Long.class, "cCampaignId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECTPHASE_ID", Long.class, "cProjectphaseId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECTTASK_ID", Long.class, "cProjecttaskId"),
				new JdbcTypeField(Types.NUMERIC, "RRAMT", BigDecimal.class, "rramt"),
				new JdbcTypeField(Types.DATE, "RRSTARTDATE", Date.class, "rrstartdate"),
				new JdbcTypeField(Types.CHAR, "LINEDOCSTATUS", String.class, "linedocstatus"),
				new JdbcTypeField(Types.CHAR, "ISASSETADDITION", String.class, "isassetaddition"),
				new JdbcTypeField(Types.CHAR, "XX_ISAPPLAYDISCOUNT", String.class, "xxIsapplaydiscount"),
				new JdbcTypeField(Types.CHAR, "A_CREATEASSET", String.class, "aCreateasset"),
				new JdbcTypeField(Types.CHAR, "A_PROCESSED", String.class, "aProcessed"),
				new JdbcTypeField(Types.VARCHAR, "A_CAPVSEXP", String.class, "aCapvsexp"),
				new JdbcTypeField(Types.BIGINT, "A_ASSET_GROUP_ID", Long.class, "aAssetGroupId"),
				new JdbcTypeField(Types.CHAR, "REPRICING", String.class, "repricing"),
				new JdbcTypeField(Types.BIGINT, "XX_BLINVOICELINE_ID", Long.class, "xxBlinvoicelineId"),
				new JdbcTypeField(Types.NUMERIC, "PO_DISCOUNT", BigDecimal.class, "poDiscount"),
				new JdbcTypeField(Types.CHAR, "VENTILATECHARGE", String.class, "ventilatecharge"),
				new JdbcTypeField(Types.CHAR, "ISREWARD", String.class, "isreward"));

		return type;
	}

	/**
	 * Create configuration for cache "COrderCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheCOrderCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("COrderCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeCOrder(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.COrder");
		qryEntity.setTableName("C_ORDER");
		qryEntity.setKeyFieldName("cOrderId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("cOrderId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("issotrx", "java.lang.String");
		fields.put("documentno", "java.lang.String");
		fields.put("docstatus", "java.lang.String");
		fields.put("docaction", "java.lang.String");
		fields.put("processing", "java.lang.String");
		fields.put("processed", "java.lang.String");
		fields.put("cDoctypeId", "java.lang.Long");
		fields.put("cDoctypetargetId", "java.lang.Long");
		fields.put("description", "java.lang.String");
		fields.put("isapproved", "java.lang.String");
		fields.put("iscreditapproved", "java.lang.String");
		fields.put("isdelivered", "java.lang.String");
		fields.put("isinvoiced", "java.lang.String");
		fields.put("isprinted", "java.lang.String");
		fields.put("istransferred", "java.lang.String");
		fields.put("isselected", "java.lang.String");
		fields.put("salesrepId", "java.lang.Long");
		fields.put("dateordered", "java.sql.Date");
		fields.put("datepromised", "java.sql.Date");
		fields.put("dateprinted", "java.sql.Date");
		fields.put("dateacct", "java.sql.Date");
		fields.put("cBpartnerId", "java.lang.Long");
		fields.put("cBpartnerLocationId", "java.lang.Long");
		fields.put("poreference", "java.lang.String");
		fields.put("isdiscountprinted", "java.lang.String");
		fields.put("cCurrencyId", "java.lang.Long");
		fields.put("paymentrule", "java.lang.String");
		fields.put("cPaymenttermId", "java.lang.Long");
		fields.put("invoicerule", "java.lang.String");
		fields.put("deliveryrule", "java.lang.String");
		fields.put("freightcostrule", "java.lang.String");
		fields.put("freightamt", "java.math.BigDecimal");
		fields.put("deliveryviarule", "java.lang.String");
		fields.put("mShipperId", "java.lang.Long");
		fields.put("cChargeId", "java.lang.Long");
		fields.put("chargeamt", "java.math.BigDecimal");
		fields.put("priorityrule", "java.lang.String");
		fields.put("totallines", "java.math.BigDecimal");
		fields.put("grandtotal", "java.math.BigDecimal");
		fields.put("mWarehouseId", "java.lang.Long");
		fields.put("mPricelistId", "java.lang.Long");
		fields.put("istaxincluded", "java.lang.String");
		fields.put("cCampaignId", "java.lang.Long");
		fields.put("cProjectId", "java.lang.Long");
		fields.put("cActivityId", "java.lang.Long");
		fields.put("posted", "java.lang.String");
		fields.put("cPaymentId", "java.lang.Long");
		fields.put("cCashlineId", "java.lang.Long");
		fields.put("sendemail", "java.lang.String");
		fields.put("adUserId", "java.lang.Long");
		fields.put("copyfrom", "java.lang.String");
		fields.put("isselfservice", "java.lang.String");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("user1Id", "java.lang.Long");
		fields.put("user2Id", "java.lang.Long");
		fields.put("cConversiontypeId", "java.lang.Long");
		fields.put("billBpartnerId", "java.lang.Long");
		fields.put("billLocationId", "java.lang.Long");
		fields.put("billUserId", "java.lang.Long");
		fields.put("payBpartnerId", "java.lang.Long");
		fields.put("payLocationId", "java.lang.Long");
		fields.put("refOrderId", "java.lang.Long");
		fields.put("isdropship", "java.lang.String");
		fields.put("description2", "java.lang.String");
		fields.put("testId", "java.lang.Long");
		fields.put("zcreatefromattribute", "java.lang.String");
		fields.put("zTransportmode", "java.lang.String");
		fields.put("zIncotermsId", "java.lang.Long");
		fields.put("zIscompleet", "java.lang.String");
		fields.put("volume", "java.math.BigDecimal");
		fields.put("weight", "java.math.BigDecimal");
		fields.put("cBpartnersrId", "java.lang.Long");
		fields.put("cBpBankaccountId", "java.lang.Long");
		fields.put("isreturntrx", "java.lang.String");
		fields.put("mReturnpolicyId", "java.lang.Long");
		fields.put("mRmacategoryId", "java.lang.Long");
		fields.put("origInoutId", "java.lang.Long");
		fields.put("origOrderId", "java.lang.Long");
		fields.put("zexplodesubcontractingorder", "java.lang.String");
		fields.put("isupdateable", "java.lang.String");
		fields.put("createfrom", "java.lang.String");
		fields.put("xxApplieddiscount", "java.lang.String");
		fields.put("withmodification", "java.lang.String");
		fields.put("xxCommandedelegue", "java.lang.String");
		fields.put("xxIsretfromautrelogiciel", "java.lang.String");
		fields.put("isquotareturned", "java.lang.String");
		fields.put("xxReturnquota", "java.lang.String");
		fields.put("globalDiscount", "java.math.BigDecimal");
		fields.put("generateto", "java.lang.String");
		fields.put("cOrderId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("cOrderId", "C_ORDER_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cDoctypeId", "C_DOCTYPE_ID");
		aliases.put("cDoctypetargetId", "C_DOCTYPETARGET_ID");
		aliases.put("salesrepId", "SALESREP_ID");
		aliases.put("cBpartnerId", "C_BPARTNER_ID");
		aliases.put("cBpartnerLocationId", "C_BPARTNER_LOCATION_ID");
		aliases.put("cCurrencyId", "C_CURRENCY_ID");
		aliases.put("cPaymenttermId", "C_PAYMENTTERM_ID");
		aliases.put("mShipperId", "M_SHIPPER_ID");
		aliases.put("cChargeId", "C_CHARGE_ID");
		aliases.put("mWarehouseId", "M_WAREHOUSE_ID");
		aliases.put("mPricelistId", "M_PRICELIST_ID");
		aliases.put("cCampaignId", "C_CAMPAIGN_ID");
		aliases.put("cProjectId", "C_PROJECT_ID");
		aliases.put("cActivityId", "C_ACTIVITY_ID");
		aliases.put("cPaymentId", "C_PAYMENT_ID");
		aliases.put("cCashlineId", "C_CASHLINE_ID");
		aliases.put("adUserId", "AD_USER_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("user1Id", "USER1_ID");
		aliases.put("user2Id", "USER2_ID");
		aliases.put("cConversiontypeId", "C_CONVERSIONTYPE_ID");
		aliases.put("billBpartnerId", "BILL_BPARTNER_ID");
		aliases.put("billLocationId", "BILL_LOCATION_ID");
		aliases.put("billUserId", "BILL_USER_ID");
		aliases.put("payBpartnerId", "PAY_BPARTNER_ID");
		aliases.put("payLocationId", "PAY_LOCATION_ID");
		aliases.put("refOrderId", "REF_ORDER_ID");
		aliases.put("testId", "TEST_ID");
		aliases.put("zTransportmode", "Z_TRANSPORTMODE");
		aliases.put("zIncotermsId", "Z_INCOTERMS_ID");
		aliases.put("zIscompleet", "Z_ISCOMPLEET");
		aliases.put("cBpartnersrId", "C_BPARTNERSR_ID");
		aliases.put("cBpBankaccountId", "C_BP_BANKACCOUNT_ID");
		aliases.put("mReturnpolicyId", "M_RETURNPOLICY_ID");
		aliases.put("mRmacategoryId", "M_RMACATEGORY_ID");
		aliases.put("origInoutId", "ORIG_INOUT_ID");
		aliases.put("origOrderId", "ORIG_ORDER_ID");
		aliases.put("xxApplieddiscount", "XX_APPLIEDDISCOUNT");
		aliases.put("xxCommandedelegue", "XX_COMMANDEDELEGUE");
		aliases.put("xxIsretfromautrelogiciel", "XX_ISRETFROMAUTRELOGICIEL");
		aliases.put("xxReturnquota", "XX_RETURNQUOTA");
		aliases.put("globalDiscount", "GLOBAL_DISCOUNT");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("C_ORDER_BPARTNER");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_ORDER_DOCUMENTNO");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("cDoctypeId", false);
		indFlds.put("documentno", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_ORDER_PROCESSED");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("adClientId", false);
		indFlds.put("processed", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("IDX$$_00010010");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("isreturntrx", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("Z_ORDER_10");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);
		indFlds.put("issotrx", false);
		indFlds.put("docstatus", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeCOrder".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeCOrder(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.COrder");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("C_ORDER");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "C_ORDER_ID", long.class, "cOrderId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.CHAR, "ISSOTRX", String.class, "issotrx"),
				new JdbcTypeField(Types.VARCHAR, "DOCUMENTNO", String.class, "documentno"),
				new JdbcTypeField(Types.CHAR, "DOCSTATUS", String.class, "docstatus"),
				new JdbcTypeField(Types.CHAR, "DOCACTION", String.class, "docaction"),
				new JdbcTypeField(Types.CHAR, "PROCESSING", String.class, "processing"),
				new JdbcTypeField(Types.CHAR, "PROCESSED", String.class, "processed"),
				new JdbcTypeField(Types.BIGINT, "C_DOCTYPE_ID", long.class, "cDoctypeId"),
				new JdbcTypeField(Types.BIGINT, "C_DOCTYPETARGET_ID", long.class, "cDoctypetargetId"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.CHAR, "ISAPPROVED", String.class, "isapproved"),
				new JdbcTypeField(Types.CHAR, "ISCREDITAPPROVED", String.class, "iscreditapproved"),
				new JdbcTypeField(Types.CHAR, "ISDELIVERED", String.class, "isdelivered"),
				new JdbcTypeField(Types.CHAR, "ISINVOICED", String.class, "isinvoiced"),
				new JdbcTypeField(Types.CHAR, "ISPRINTED", String.class, "isprinted"),
				new JdbcTypeField(Types.CHAR, "ISTRANSFERRED", String.class, "istransferred"),
				new JdbcTypeField(Types.CHAR, "ISSELECTED", String.class, "isselected"),
				new JdbcTypeField(Types.BIGINT, "SALESREP_ID", long.class, "salesrepId"),
				new JdbcTypeField(Types.DATE, "DATEORDERED", Date.class, "dateordered"),
				new JdbcTypeField(Types.DATE, "DATEPROMISED", Date.class, "datepromised"),
				new JdbcTypeField(Types.DATE, "DATEPRINTED", Date.class, "dateprinted"),
				new JdbcTypeField(Types.DATE, "DATEACCT", Date.class, "dateacct"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_ID", long.class, "cBpartnerId"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_LOCATION_ID", long.class, "cBpartnerLocationId"),
				new JdbcTypeField(Types.VARCHAR, "POREFERENCE", String.class, "poreference"),
				new JdbcTypeField(Types.CHAR, "ISDISCOUNTPRINTED", String.class, "isdiscountprinted"),
				new JdbcTypeField(Types.BIGINT, "C_CURRENCY_ID", long.class, "cCurrencyId"),
				new JdbcTypeField(Types.CHAR, "PAYMENTRULE", String.class, "paymentrule"),
				new JdbcTypeField(Types.BIGINT, "C_PAYMENTTERM_ID", long.class, "cPaymenttermId"),
				new JdbcTypeField(Types.CHAR, "INVOICERULE", String.class, "invoicerule"),
				new JdbcTypeField(Types.CHAR, "DELIVERYRULE", String.class, "deliveryrule"),
				new JdbcTypeField(Types.CHAR, "FREIGHTCOSTRULE", String.class, "freightcostrule"),
				new JdbcTypeField(Types.NUMERIC, "FREIGHTAMT", BigDecimal.class, "freightamt"),
				new JdbcTypeField(Types.CHAR, "DELIVERYVIARULE", String.class, "deliveryviarule"),
				new JdbcTypeField(Types.BIGINT, "M_SHIPPER_ID", Long.class, "mShipperId"),
				new JdbcTypeField(Types.BIGINT, "C_CHARGE_ID", Long.class, "cChargeId"),
				new JdbcTypeField(Types.NUMERIC, "CHARGEAMT", BigDecimal.class, "chargeamt"),
				new JdbcTypeField(Types.CHAR, "PRIORITYRULE", String.class, "priorityrule"),
				new JdbcTypeField(Types.NUMERIC, "TOTALLINES", BigDecimal.class, "totallines"),
				new JdbcTypeField(Types.NUMERIC, "GRANDTOTAL", BigDecimal.class, "grandtotal"),
				new JdbcTypeField(Types.BIGINT, "M_WAREHOUSE_ID", long.class, "mWarehouseId"),
				new JdbcTypeField(Types.BIGINT, "M_PRICELIST_ID", long.class, "mPricelistId"),
				new JdbcTypeField(Types.CHAR, "ISTAXINCLUDED", String.class, "istaxincluded"),
				new JdbcTypeField(Types.BIGINT, "C_CAMPAIGN_ID", Long.class, "cCampaignId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECT_ID", Long.class, "cProjectId"),
				new JdbcTypeField(Types.BIGINT, "C_ACTIVITY_ID", Long.class, "cActivityId"),
				new JdbcTypeField(Types.CHAR, "POSTED", String.class, "posted"),
				new JdbcTypeField(Types.BIGINT, "C_PAYMENT_ID", Long.class, "cPaymentId"),
				new JdbcTypeField(Types.BIGINT, "C_CASHLINE_ID", Long.class, "cCashlineId"),
				new JdbcTypeField(Types.CHAR, "SENDEMAIL", String.class, "sendemail"),
				new JdbcTypeField(Types.BIGINT, "AD_USER_ID", Long.class, "adUserId"),
				new JdbcTypeField(Types.CHAR, "COPYFROM", String.class, "copyfrom"),
				new JdbcTypeField(Types.CHAR, "ISSELFSERVICE", String.class, "isselfservice"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.BIGINT, "USER1_ID", Long.class, "user1Id"),
				new JdbcTypeField(Types.BIGINT, "USER2_ID", Long.class, "user2Id"),
				new JdbcTypeField(Types.BIGINT, "C_CONVERSIONTYPE_ID", Long.class, "cConversiontypeId"),
				new JdbcTypeField(Types.BIGINT, "BILL_BPARTNER_ID", long.class, "billBpartnerId"),
				new JdbcTypeField(Types.BIGINT, "BILL_LOCATION_ID", long.class, "billLocationId"),
				new JdbcTypeField(Types.BIGINT, "BILL_USER_ID", Long.class, "billUserId"),
				new JdbcTypeField(Types.BIGINT, "PAY_BPARTNER_ID", Long.class, "payBpartnerId"),
				new JdbcTypeField(Types.BIGINT, "PAY_LOCATION_ID", Long.class, "payLocationId"),
				new JdbcTypeField(Types.BIGINT, "REF_ORDER_ID", Long.class, "refOrderId"),
				new JdbcTypeField(Types.CHAR, "ISDROPSHIP", String.class, "isdropship"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION2", String.class, "description2"),
				new JdbcTypeField(Types.BIGINT, "TEST_ID", Long.class, "testId"),
				new JdbcTypeField(Types.CHAR, "ZCREATEFROMATTRIBUTE", String.class, "zcreatefromattribute"),
				new JdbcTypeField(Types.CHAR, "Z_TRANSPORTMODE", String.class, "zTransportmode"),
				new JdbcTypeField(Types.BIGINT, "Z_INCOTERMS_ID", Long.class, "zIncotermsId"),
				new JdbcTypeField(Types.CHAR, "Z_ISCOMPLEET", String.class, "zIscompleet"),
				new JdbcTypeField(Types.NUMERIC, "VOLUME", BigDecimal.class, "volume"),
				new JdbcTypeField(Types.NUMERIC, "WEIGHT", BigDecimal.class, "weight"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNERSR_ID", Long.class, "cBpartnersrId"),
				new JdbcTypeField(Types.BIGINT, "C_BP_BANKACCOUNT_ID", Long.class, "cBpBankaccountId"),
				new JdbcTypeField(Types.CHAR, "ISRETURNTRX", String.class, "isreturntrx"),
				new JdbcTypeField(Types.BIGINT, "M_RETURNPOLICY_ID", Long.class, "mReturnpolicyId"),
				new JdbcTypeField(Types.BIGINT, "M_RMACATEGORY_ID", Long.class, "mRmacategoryId"),
				new JdbcTypeField(Types.BIGINT, "ORIG_INOUT_ID", Long.class, "origInoutId"),
				new JdbcTypeField(Types.BIGINT, "ORIG_ORDER_ID", Long.class, "origOrderId"),
				new JdbcTypeField(Types.VARCHAR, "ZEXPLODESUBCONTRACTINGORDER", String.class,
						"zexplodesubcontractingorder"),
				new JdbcTypeField(Types.CHAR, "ISUPDATEABLE", String.class, "isupdateable"),
				new JdbcTypeField(Types.CHAR, "CREATEFROM", String.class, "createfrom"),
				new JdbcTypeField(Types.CHAR, "XX_APPLIEDDISCOUNT", String.class, "xxApplieddiscount"),
				new JdbcTypeField(Types.CHAR, "WITHMODIFICATION", String.class, "withmodification"),
				new JdbcTypeField(Types.CHAR, "XX_COMMANDEDELEGUE", String.class, "xxCommandedelegue"),
				new JdbcTypeField(Types.CHAR, "XX_ISRETFROMAUTRELOGICIEL", String.class, "xxIsretfromautrelogiciel"),
				new JdbcTypeField(Types.CHAR, "ISQUOTARETURNED", String.class, "isquotareturned"),
				new JdbcTypeField(Types.CHAR, "XX_RETURNQUOTA", String.class, "xxReturnquota"),
				new JdbcTypeField(Types.NUMERIC, "GLOBAL_DISCOUNT", BigDecimal.class, "globalDiscount"),
				new JdbcTypeField(Types.CHAR, "GENERATETO", String.class, "generateto"));

		return type;
	}

	/**
	 * Create configuration for cache "COrderlineCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheCOrderlineCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("COrderlineCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeCOrderline(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.COrderline");
		qryEntity.setTableName("C_ORDERLINE");
		qryEntity.setKeyFieldName("cOrderlineId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("cOrderlineId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("cOrderId", "java.lang.Long");
		fields.put("line", "java.lang.Long");
		fields.put("cBpartnerId", "java.lang.Long");
		fields.put("cBpartnerLocationId", "java.lang.Long");
		fields.put("dateordered", "java.sql.Date");
		fields.put("datepromised", "java.sql.Date");
		fields.put("datedelivered", "java.sql.Date");
		fields.put("dateinvoiced", "java.sql.Date");
		fields.put("description", "java.lang.String");
		fields.put("mProductId", "java.lang.Long");
		fields.put("mWarehouseId", "java.lang.Long");
		fields.put("cUomId", "java.lang.Long");
		fields.put("qtyordered", "java.math.BigDecimal");
		fields.put("qtyreserved", "java.math.BigDecimal");
		fields.put("qtydelivered", "java.math.BigDecimal");
		fields.put("qtyinvoiced", "java.math.BigDecimal");
		fields.put("mShipperId", "java.lang.Long");
		fields.put("cCurrencyId", "java.lang.Long");
		fields.put("pricelist", "java.math.BigDecimal");
		fields.put("priceactual", "java.math.BigDecimal");
		fields.put("pricelimit", "java.math.BigDecimal");
		fields.put("linenetamt", "java.math.BigDecimal");
		fields.put("discount", "java.math.BigDecimal");
		fields.put("freightamt", "java.math.BigDecimal");
		fields.put("cChargeId", "java.lang.Long");
		fields.put("cTaxId", "java.lang.Long");
		fields.put("sResourceassignmentId", "java.lang.Long");
		fields.put("refOrderlineId", "java.lang.Long");
		fields.put("mAttributesetinstanceId", "java.lang.Long");
		fields.put("isdescription", "java.lang.String");
		fields.put("processed", "java.lang.String");
		fields.put("user1Id", "java.lang.Long");
		fields.put("user2Id", "java.lang.Long");
		fields.put("qtyentered", "java.math.BigDecimal");
		fields.put("priceentered", "java.math.BigDecimal");
		fields.put("cProjectId", "java.lang.Long");
		fields.put("pricecost", "java.math.BigDecimal");
		fields.put("qtylostsales", "java.math.BigDecimal");
		fields.put("mLocatorId", "java.lang.Long");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("cActivityId", "java.lang.Long");
		fields.put("cCampaignId", "java.lang.Long");
		fields.put("cProjectphaseId", "java.lang.Long");
		fields.put("cProjecttaskId", "java.lang.Long");
		fields.put("rramt", "java.math.BigDecimal");
		fields.put("rrstartdate", "java.sql.Date");
		fields.put("origInoutlineId", "java.lang.Long");
		fields.put("origOrderlineId", "java.lang.Long");
		fields.put("qtyallocated", "java.math.BigDecimal");
		fields.put("qtydedicated", "java.math.BigDecimal");
		fields.put("qtyreturned", "java.math.BigDecimal");
		fields.put("zDeliverydaysmanual", "java.math.BigDecimal");
		fields.put("zDatedelivered", "java.sql.Date");
		fields.put("xxRewardamt", "java.math.BigDecimal");
		fields.put("xxLignegratuite", "java.lang.String");
		fields.put("parentId", "java.lang.Long");
		fields.put("ispaid", "java.lang.String");
		fields.put("xxUg", "java.math.BigDecimal");
		fields.put("type", "java.lang.String");
		fields.put("xxSalescontextProductId", "java.lang.Long");
		fields.put("isFromchild", "java.lang.String");
		fields.put("xxSalescontextId", "java.lang.Long");
		fields.put("xxReturnedqty", "java.math.BigDecimal");
		fields.put("repricing", "java.lang.String");
		fields.put("xxAppliedUg", "java.math.BigDecimal");
		fields.put("xxAppliedDiscount", "java.math.BigDecimal");
		fields.put("xxAppliedReward", "java.math.BigDecimal");
		fields.put("xxLinenetamtorig", "java.math.BigDecimal");
		fields.put("xxDiscountschemaId", "java.lang.Long");
		fields.put("mPromotionId", "java.lang.Long");
		fields.put("xxQuotaclient", "java.math.BigDecimal");
		fields.put("xxQuotaoperatrice", "java.math.BigDecimal");
		fields.put("aAssetId", "java.lang.Long");
		fields.put("ismanual", "java.lang.String");
		fields.put("globalDiscount", "java.math.BigDecimal");
		fields.put("isprinted", "java.lang.String");
		fields.put("xxPoDiscount", "java.math.BigDecimal");
		fields.put("xxPosuppDiscount", "java.math.BigDecimal");
		fields.put("xxLocatorsourceId", "java.lang.Long");
		fields.put("cOrderlineId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("cOrderlineId", "C_ORDERLINE_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cOrderId", "C_ORDER_ID");
		aliases.put("cBpartnerId", "C_BPARTNER_ID");
		aliases.put("cBpartnerLocationId", "C_BPARTNER_LOCATION_ID");
		aliases.put("mProductId", "M_PRODUCT_ID");
		aliases.put("mWarehouseId", "M_WAREHOUSE_ID");
		aliases.put("cUomId", "C_UOM_ID");
		aliases.put("mShipperId", "M_SHIPPER_ID");
		aliases.put("cCurrencyId", "C_CURRENCY_ID");
		aliases.put("cChargeId", "C_CHARGE_ID");
		aliases.put("cTaxId", "C_TAX_ID");
		aliases.put("sResourceassignmentId", "S_RESOURCEASSIGNMENT_ID");
		aliases.put("refOrderlineId", "REF_ORDERLINE_ID");
		aliases.put("mAttributesetinstanceId", "M_ATTRIBUTESETINSTANCE_ID");
		aliases.put("user1Id", "USER1_ID");
		aliases.put("user2Id", "USER2_ID");
		aliases.put("cProjectId", "C_PROJECT_ID");
		aliases.put("mLocatorId", "M_LOCATOR_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("cActivityId", "C_ACTIVITY_ID");
		aliases.put("cCampaignId", "C_CAMPAIGN_ID");
		aliases.put("cProjectphaseId", "C_PROJECTPHASE_ID");
		aliases.put("cProjecttaskId", "C_PROJECTTASK_ID");
		aliases.put("origInoutlineId", "ORIG_INOUTLINE_ID");
		aliases.put("origOrderlineId", "ORIG_ORDERLINE_ID");
		aliases.put("zDeliverydaysmanual", "Z_DELIVERYDAYSMANUAL");
		aliases.put("zDatedelivered", "Z_DATEDELIVERED");
		aliases.put("xxRewardamt", "XX_REWARDAMT");
		aliases.put("xxLignegratuite", "XX_LIGNEGRATUITE");
		aliases.put("parentId", "PARENT_ID");
		aliases.put("xxUg", "XX_UG");
		aliases.put("xxSalescontextProductId", "XX_SALESCONTEXT_PRODUCT_ID");
		aliases.put("isFromchild", "IS_FROMCHILD");
		aliases.put("xxSalescontextId", "XX_SALESCONTEXT_ID");
		aliases.put("xxReturnedqty", "XX_RETURNEDQTY");
		aliases.put("xxAppliedUg", "XX_APPLIED_UG");
		aliases.put("xxAppliedDiscount", "XX_APPLIED_DISCOUNT");
		aliases.put("xxAppliedReward", "XX_APPLIED_REWARD");
		aliases.put("xxLinenetamtorig", "XX_LINENETAMTORIG");
		aliases.put("xxDiscountschemaId", "XX_DISCOUNTSCHEMA_ID");
		aliases.put("mPromotionId", "M_PROMOTION_ID");
		aliases.put("xxQuotaclient", "XX_QUOTACLIENT");
		aliases.put("xxQuotaoperatrice", "XX_QUOTAOPERATRICE");
		aliases.put("aAssetId", "A_ASSET_ID");
		aliases.put("globalDiscount", "GLOBAL_DISCOUNT");
		aliases.put("xxPoDiscount", "XX_PO_DISCOUNT");
		aliases.put("xxPosuppDiscount", "XX_POSUPP_DISCOUNT");
		aliases.put("xxLocatorsourceId", "XX_LOCATORSOURCE_ID");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("C_ORDERLINE_LINE_PARENT");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("parentId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_ORDERLINE_ORDER");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cOrderId", false);
		indFlds.put("cTaxId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_ORDERLINE_PARENT_ID");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("parentId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("C_ORDERLINE_PRODUCT");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("mProductId", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeCOrderline".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeCOrderline(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.COrderline");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("C_ORDERLINE");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "C_ORDERLINE_ID", long.class, "cOrderlineId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.BIGINT, "C_ORDER_ID", long.class, "cOrderId"),
				new JdbcTypeField(Types.BIGINT, "LINE", long.class, "line"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_ID", Long.class, "cBpartnerId"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_LOCATION_ID", Long.class, "cBpartnerLocationId"),
				new JdbcTypeField(Types.DATE, "DATEORDERED", Date.class, "dateordered"),
				new JdbcTypeField(Types.DATE, "DATEPROMISED", Date.class, "datepromised"),
				new JdbcTypeField(Types.DATE, "DATEDELIVERED", Date.class, "datedelivered"),
				new JdbcTypeField(Types.DATE, "DATEINVOICED", Date.class, "dateinvoiced"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.BIGINT, "M_PRODUCT_ID", Long.class, "mProductId"),
				new JdbcTypeField(Types.BIGINT, "M_WAREHOUSE_ID", long.class, "mWarehouseId"),
				new JdbcTypeField(Types.BIGINT, "C_UOM_ID", Long.class, "cUomId"),
				new JdbcTypeField(Types.NUMERIC, "QTYORDERED", BigDecimal.class, "qtyordered"),
				new JdbcTypeField(Types.NUMERIC, "QTYRESERVED", BigDecimal.class, "qtyreserved"),
				new JdbcTypeField(Types.NUMERIC, "QTYDELIVERED", BigDecimal.class, "qtydelivered"),
				new JdbcTypeField(Types.NUMERIC, "QTYINVOICED", BigDecimal.class, "qtyinvoiced"),
				new JdbcTypeField(Types.BIGINT, "M_SHIPPER_ID", Long.class, "mShipperId"),
				new JdbcTypeField(Types.BIGINT, "C_CURRENCY_ID", long.class, "cCurrencyId"),
				new JdbcTypeField(Types.NUMERIC, "PRICELIST", BigDecimal.class, "pricelist"),
				new JdbcTypeField(Types.NUMERIC, "PRICEACTUAL", BigDecimal.class, "priceactual"),
				new JdbcTypeField(Types.NUMERIC, "PRICELIMIT", BigDecimal.class, "pricelimit"),
				new JdbcTypeField(Types.NUMERIC, "LINENETAMT", BigDecimal.class, "linenetamt"),
				new JdbcTypeField(Types.NUMERIC, "DISCOUNT", BigDecimal.class, "discount"),
				new JdbcTypeField(Types.NUMERIC, "FREIGHTAMT", BigDecimal.class, "freightamt"),
				new JdbcTypeField(Types.BIGINT, "C_CHARGE_ID", Long.class, "cChargeId"),
				new JdbcTypeField(Types.BIGINT, "C_TAX_ID", long.class, "cTaxId"),
				new JdbcTypeField(Types.BIGINT, "S_RESOURCEASSIGNMENT_ID", Long.class, "sResourceassignmentId"),
				new JdbcTypeField(Types.BIGINT, "REF_ORDERLINE_ID", Long.class, "refOrderlineId"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESETINSTANCE_ID", Long.class, "mAttributesetinstanceId"),
				new JdbcTypeField(Types.CHAR, "ISDESCRIPTION", String.class, "isdescription"),
				new JdbcTypeField(Types.CHAR, "PROCESSED", String.class, "processed"),
				new JdbcTypeField(Types.BIGINT, "USER1_ID", Long.class, "user1Id"),
				new JdbcTypeField(Types.BIGINT, "USER2_ID", Long.class, "user2Id"),
				new JdbcTypeField(Types.NUMERIC, "QTYENTERED", BigDecimal.class, "qtyentered"),
				new JdbcTypeField(Types.NUMERIC, "PRICEENTERED", BigDecimal.class, "priceentered"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECT_ID", Long.class, "cProjectId"),
				new JdbcTypeField(Types.NUMERIC, "PRICECOST", BigDecimal.class, "pricecost"),
				new JdbcTypeField(Types.NUMERIC, "QTYLOSTSALES", BigDecimal.class, "qtylostsales"),
				new JdbcTypeField(Types.BIGINT, "M_LOCATOR_ID", Long.class, "mLocatorId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.BIGINT, "C_ACTIVITY_ID", Long.class, "cActivityId"),
				new JdbcTypeField(Types.BIGINT, "C_CAMPAIGN_ID", Long.class, "cCampaignId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECTPHASE_ID", Long.class, "cProjectphaseId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECTTASK_ID", Long.class, "cProjecttaskId"),
				new JdbcTypeField(Types.NUMERIC, "RRAMT", BigDecimal.class, "rramt"),
				new JdbcTypeField(Types.DATE, "RRSTARTDATE", Date.class, "rrstartdate"),
				new JdbcTypeField(Types.BIGINT, "ORIG_INOUTLINE_ID", Long.class, "origInoutlineId"),
				new JdbcTypeField(Types.BIGINT, "ORIG_ORDERLINE_ID", Long.class, "origOrderlineId"),
				new JdbcTypeField(Types.NUMERIC, "QTYALLOCATED", BigDecimal.class, "qtyallocated"),
				new JdbcTypeField(Types.NUMERIC, "QTYDEDICATED", BigDecimal.class, "qtydedicated"),
				new JdbcTypeField(Types.NUMERIC, "QTYRETURNED", BigDecimal.class, "qtyreturned"),
				new JdbcTypeField(Types.NUMERIC, "Z_DELIVERYDAYSMANUAL", BigDecimal.class, "zDeliverydaysmanual"),
				new JdbcTypeField(Types.DATE, "Z_DATEDELIVERED", Date.class, "zDatedelivered"),
				new JdbcTypeField(Types.NUMERIC, "XX_REWARDAMT", BigDecimal.class, "xxRewardamt"),
				new JdbcTypeField(Types.CHAR, "XX_LIGNEGRATUITE", String.class, "xxLignegratuite"),
				new JdbcTypeField(Types.BIGINT, "PARENT_ID", Long.class, "parentId"),
				new JdbcTypeField(Types.CHAR, "ISPAID", String.class, "ispaid"),
				new JdbcTypeField(Types.NUMERIC, "XX_UG", BigDecimal.class, "xxUg"),
				new JdbcTypeField(Types.CHAR, "TYPE", String.class, "type"),
				new JdbcTypeField(Types.BIGINT, "XX_SALESCONTEXT_PRODUCT_ID", Long.class, "xxSalescontextProductId"),
				new JdbcTypeField(Types.CHAR, "IS_FROMCHILD", String.class, "isFromchild"),
				new JdbcTypeField(Types.BIGINT, "XX_SALESCONTEXT_ID", Long.class, "xxSalescontextId"),
				new JdbcTypeField(Types.NUMERIC, "XX_RETURNEDQTY", BigDecimal.class, "xxReturnedqty"),
				new JdbcTypeField(Types.CHAR, "REPRICING", String.class, "repricing"),
				new JdbcTypeField(Types.NUMERIC, "XX_APPLIED_UG", BigDecimal.class, "xxAppliedUg"),
				new JdbcTypeField(Types.NUMERIC, "XX_APPLIED_DISCOUNT", BigDecimal.class, "xxAppliedDiscount"),
				new JdbcTypeField(Types.NUMERIC, "XX_APPLIED_REWARD", BigDecimal.class, "xxAppliedReward"),
				new JdbcTypeField(Types.NUMERIC, "XX_LINENETAMTORIG", BigDecimal.class, "xxLinenetamtorig"),
				new JdbcTypeField(Types.BIGINT, "XX_DISCOUNTSCHEMA_ID", Long.class, "xxDiscountschemaId"),
				new JdbcTypeField(Types.BIGINT, "M_PROMOTION_ID", Long.class, "mPromotionId"),
				new JdbcTypeField(Types.NUMERIC, "XX_QUOTACLIENT", BigDecimal.class, "xxQuotaclient"),
				new JdbcTypeField(Types.NUMERIC, "XX_QUOTAOPERATRICE", BigDecimal.class, "xxQuotaoperatrice"),
				new JdbcTypeField(Types.BIGINT, "A_ASSET_ID", Long.class, "aAssetId"),
				new JdbcTypeField(Types.CHAR, "ISMANUAL", String.class, "ismanual"),
				new JdbcTypeField(Types.NUMERIC, "GLOBAL_DISCOUNT", BigDecimal.class, "globalDiscount"),
				new JdbcTypeField(Types.CHAR, "ISPRINTED", String.class, "isprinted"),
				new JdbcTypeField(Types.NUMERIC, "XX_PO_DISCOUNT", BigDecimal.class, "xxPoDiscount"),
				new JdbcTypeField(Types.NUMERIC, "XX_POSUPP_DISCOUNT", BigDecimal.class, "xxPosuppDiscount"),
				new JdbcTypeField(Types.BIGINT, "XX_LOCATORSOURCE_ID", Long.class, "xxLocatorsourceId"));

		return type;
	}

	/**
	 * Create configuration for cache "MAttributeCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheMAttributeCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("MAttributeCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeMAttribute(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.MAttribute");
		qryEntity.setTableName("M_ATTRIBUTE");
		qryEntity.setKeyFieldName("mAttributeId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("mAttributeId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("name", "java.lang.String");
		fields.put("description", "java.lang.String");
		fields.put("ismandatory", "java.lang.String");
		fields.put("isinstanceattribute", "java.lang.String");
		fields.put("mAttributesearchId", "java.lang.Long");
		fields.put("attributevaluetype", "java.lang.String");
		fields.put("prefix", "java.lang.String");
		fields.put("suffix", "java.lang.String");
		fields.put("mAttributeId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("mAttributeId", "M_ATTRIBUTE_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("mAttributesearchId", "M_ATTRIBUTESEARCH_ID");

		qryEntity.setAliases(aliases);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeMAttribute".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeMAttribute(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.MAttribute");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("M_ATTRIBUTE");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTE_ID", long.class, "mAttributeId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.VARCHAR, "NAME", String.class, "name"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.CHAR, "ISMANDATORY", String.class, "ismandatory"),
				new JdbcTypeField(Types.CHAR, "ISINSTANCEATTRIBUTE", String.class, "isinstanceattribute"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESEARCH_ID", Long.class, "mAttributesearchId"),
				new JdbcTypeField(Types.CHAR, "ATTRIBUTEVALUETYPE", String.class, "attributevaluetype"),
				new JdbcTypeField(Types.VARCHAR, "PREFIX", String.class, "prefix"),
				new JdbcTypeField(Types.VARCHAR, "SUFFIX", String.class, "suffix"));

		return type;
	}

	/**
	 * Create configuration for cache "MAttributeinstanceCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheMAttributeinstanceCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("MAttributeinstanceCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeMAttributeinstance(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("com.wanasis.model.MAttributeinstanceKey");
		qryEntity.setValueType("com.wanasis.model.MAttributeinstance");
		qryEntity.setTableName("M_ATTRIBUTEINSTANCE");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("mAttributesetinstanceId");

		keyFields.add("mAttributeId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("mAttributesetinstanceId", "java.lang.Long");
		fields.put("mAttributeId", "java.lang.Long");
		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("mAttributevalueId", "java.lang.Long");
		fields.put("value", "java.lang.String");
		fields.put("valuenumber", "java.math.BigDecimal");
		fields.put("valuedate", "java.sql.Date");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("mAttributesetinstanceId", "M_ATTRIBUTESETINSTANCE_ID");
		aliases.put("mAttributeId", "M_ATTRIBUTE_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("mAttributevalueId", "M_ATTRIBUTEVALUE_ID");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("M_ATTRIBUTEINSTANCE_KEY");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("mAttributesetinstanceId", false);
		indFlds.put("mAttributeId", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeMAttributeinstance".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeMAttributeinstance(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType("com.wanasis.model.MAttributeinstanceKey");
		type.setValueType("com.wanasis.model.MAttributeinstance");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("M_ATTRIBUTEINSTANCE");

		type.setKeyFields(
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESETINSTANCE_ID", long.class, "mAttributesetinstanceId"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTE_ID", long.class, "mAttributeId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTEVALUE_ID", Long.class, "mAttributevalueId"),
				new JdbcTypeField(Types.VARCHAR, "VALUE", String.class, "value"),
				new JdbcTypeField(Types.NUMERIC, "VALUENUMBER", BigDecimal.class, "valuenumber"),
				new JdbcTypeField(Types.DATE, "VALUEDATE", Date.class, "valuedate"));

		return type;
	}

	/**
	 * Create configuration for cache "MInoutCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheMInoutCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("MInoutCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeMInout(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.MInout");
		qryEntity.setTableName("M_INOUT");
		qryEntity.setKeyFieldName("mInoutId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("mInoutId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("issotrx", "java.lang.String");
		fields.put("documentno", "java.lang.String");
		fields.put("docaction", "java.lang.String");
		fields.put("docstatus", "java.lang.String");
		fields.put("posted", "java.lang.String");
		fields.put("processing", "java.lang.String");
		fields.put("processed", "java.lang.String");
		fields.put("cDoctypeId", "java.lang.Long");
		fields.put("description", "java.lang.String");
		fields.put("cOrderId", "java.lang.Long");
		fields.put("dateordered", "java.sql.Date");
		fields.put("isprinted", "java.lang.String");
		fields.put("movementtype", "java.lang.String");
		fields.put("movementdate", "java.sql.Date");
		fields.put("dateacct", "java.sql.Date");
		fields.put("cBpartnerId", "java.lang.Long");
		fields.put("cBpartnerLocationId", "java.lang.Long");
		fields.put("mWarehouseId", "java.lang.Long");
		fields.put("poreference", "java.lang.String");
		fields.put("deliveryrule", "java.lang.String");
		fields.put("freightcostrule", "java.lang.String");
		fields.put("freightamt", "java.math.BigDecimal");
		fields.put("deliveryviarule", "java.lang.String");
		fields.put("mShipperId", "java.lang.Long");
		fields.put("cChargeId", "java.lang.Long");
		fields.put("chargeamt", "java.math.BigDecimal");
		fields.put("priorityrule", "java.lang.String");
		fields.put("dateprinted", "java.sql.Date");
		fields.put("cInvoiceId", "java.lang.Long");
		fields.put("createfrom", "java.lang.String");
		fields.put("generateto", "java.lang.String");
		fields.put("sendemail", "java.lang.String");
		fields.put("adUserId", "java.lang.Long");
		fields.put("salesrepId", "java.lang.Long");
		fields.put("nopackages", "java.lang.Long");
		fields.put("pickdate", "java.sql.Date");
		fields.put("shipdate", "java.sql.Date");
		fields.put("trackingno", "java.lang.String");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("cProjectId", "java.lang.Long");
		fields.put("cCampaignId", "java.lang.Long");
		fields.put("cActivityId", "java.lang.Long");
		fields.put("user1Id", "java.lang.Long");
		fields.put("user2Id", "java.lang.Long");
		fields.put("datereceived", "java.sql.Date");
		fields.put("isintransit", "java.lang.String");
		fields.put("refInoutId", "java.lang.Long");
		fields.put("createconfirm", "java.lang.String");
		fields.put("createpackage", "java.lang.String");
		fields.put("isapproved", "java.lang.String");
		fields.put("isindispute", "java.lang.String");
		fields.put("zNaturetrans", "java.lang.String");
		fields.put("zRegimetrans", "java.lang.String");
		fields.put("matchrequirementr", "java.lang.String");
		fields.put("volume", "java.math.BigDecimal");
		fields.put("weight", "java.math.BigDecimal");
		fields.put("isreturntrx", "java.lang.String");
		fields.put("xxControleurId", "java.lang.Long");
		fields.put("xxPreparateurId", "java.lang.Long");
		fields.put("islivqr", "java.lang.String");
		fields.put("xxEmbaleurId", "java.lang.Long");
		fields.put("batchdocumentno", "java.lang.String");
		fields.put("xxSachet", "java.lang.Long");
		fields.put("xxBag", "java.lang.Long");
		fields.put("isprintapproved", "java.lang.String");
		fields.put("xxControleurChId", "java.lang.Long");
		fields.put("xxEmbaleurChId", "java.lang.Long");
		fields.put("xxPreparateurChId", "java.lang.Long");
		fields.put("xxCoCh", "java.lang.Long");
		fields.put("xxCvCh", "java.lang.Long");
		fields.put("xxSachetCh", "java.lang.Long");
		fields.put("xxBacCh", "java.lang.Long");
		fields.put("isrectified", "java.lang.String");
		fields.put("isarchived", "java.lang.String");
		fields.put("motifRectif", "java.lang.String");
		fields.put("isrectifiedafter", "java.lang.String");
		fields.put("poreferenceCh", "java.lang.String");
		fields.put("mWarehouseChId", "java.lang.Long");
		fields.put("salesrepChId", "java.lang.Long");
		fields.put("docactionCh", "java.lang.String");
		fields.put("isrectifiedafterCh", "java.lang.String");
		fields.put("isrectifiedCh", "java.lang.String");
		fields.put("isarchivedCh", "java.lang.String");
		fields.put("motifRectifCh", "java.lang.String");
		fields.put("xxIsdejaservi", "java.lang.String");
		fields.put("etiquete", "java.lang.String");
		fields.put("iscontrolormodified", "java.lang.String");
		fields.put("ispreparatormodified", "java.lang.String");
		fields.put("mPicktableId", "java.lang.Long");
		fields.put("pickstatus", "java.lang.String");
		fields.put("xxControleur2ChId", "java.lang.Long");
		fields.put("iscontrolor2modified", "java.lang.String");
		fields.put("modifNonDeclarer", "java.lang.String");
		fields.put("generatemovement", "java.lang.String");
		fields.put("xxCloseorder", "java.lang.String");
		fields.put("mInoutId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("mInoutId", "M_INOUT_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cDoctypeId", "C_DOCTYPE_ID");
		aliases.put("cOrderId", "C_ORDER_ID");
		aliases.put("cBpartnerId", "C_BPARTNER_ID");
		aliases.put("cBpartnerLocationId", "C_BPARTNER_LOCATION_ID");
		aliases.put("mWarehouseId", "M_WAREHOUSE_ID");
		aliases.put("mShipperId", "M_SHIPPER_ID");
		aliases.put("cChargeId", "C_CHARGE_ID");
		aliases.put("cInvoiceId", "C_INVOICE_ID");
		aliases.put("adUserId", "AD_USER_ID");
		aliases.put("salesrepId", "SALESREP_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("cProjectId", "C_PROJECT_ID");
		aliases.put("cCampaignId", "C_CAMPAIGN_ID");
		aliases.put("cActivityId", "C_ACTIVITY_ID");
		aliases.put("user1Id", "USER1_ID");
		aliases.put("user2Id", "USER2_ID");
		aliases.put("refInoutId", "REF_INOUT_ID");
		aliases.put("zNaturetrans", "Z_NATURETRANS");
		aliases.put("zRegimetrans", "Z_REGIMETRANS");
		aliases.put("xxControleurId", "XX_CONTROLEUR_ID");
		aliases.put("xxPreparateurId", "XX_PREPARATEUR_ID");
		aliases.put("xxEmbaleurId", "XX_EMBALEUR_ID");
		aliases.put("xxSachet", "XX_SACHET");
		aliases.put("xxBag", "XX_BAG");
		aliases.put("xxControleurChId", "XX_CONTROLEUR_CH_ID");
		aliases.put("xxEmbaleurChId", "XX_EMBALEUR_CH_ID");
		aliases.put("xxPreparateurChId", "XX_PREPARATEUR_CH_ID");
		aliases.put("xxCoCh", "XX_CO_CH");
		aliases.put("xxCvCh", "XX_CV_CH");
		aliases.put("xxSachetCh", "XX_SACHET_CH");
		aliases.put("xxBacCh", "XX_BAC_CH");
		aliases.put("motifRectif", "MOTIF_RECTIF");
		aliases.put("poreferenceCh", "POREFERENCE_CH");
		aliases.put("mWarehouseChId", "M_WAREHOUSE_CH_ID");
		aliases.put("salesrepChId", "SALESREP_CH_ID");
		aliases.put("docactionCh", "DOCACTION_CH");
		aliases.put("isrectifiedafterCh", "ISRECTIFIEDAFTER_CH");
		aliases.put("isrectifiedCh", "ISRECTIFIED_CH");
		aliases.put("isarchivedCh", "ISARCHIVED_CH");
		aliases.put("motifRectifCh", "MOTIF_RECTIF_CH");
		aliases.put("xxIsdejaservi", "XX_ISDEJASERVI");
		aliases.put("mPicktableId", "M_PICKTABLE_ID");
		aliases.put("xxControleur2ChId", "XX_CONTROLEUR2_CH_ID");
		aliases.put("modifNonDeclarer", "MODIF_NON_DECLARER");
		aliases.put("xxCloseorder", "XX_CLOSEORDER");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("IDX$$_00010001");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("docstatus", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("IDX$$_00010011");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("docstatus", false);
		indFlds.put("cBpartnerId", false);
		indFlds.put("cOrderId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_INOUT_BPARTNER");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cBpartnerId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_INOUT_DOCUMENTNO");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("documentno", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_INOUT_ORDER");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cOrderId", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeMInout".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeMInout(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.MInout");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("M_INOUT");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "M_INOUT_ID", long.class, "mInoutId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.CHAR, "ISSOTRX", String.class, "issotrx"),
				new JdbcTypeField(Types.VARCHAR, "DOCUMENTNO", String.class, "documentno"),
				new JdbcTypeField(Types.CHAR, "DOCACTION", String.class, "docaction"),
				new JdbcTypeField(Types.CHAR, "DOCSTATUS", String.class, "docstatus"),
				new JdbcTypeField(Types.CHAR, "POSTED", String.class, "posted"),
				new JdbcTypeField(Types.CHAR, "PROCESSING", String.class, "processing"),
				new JdbcTypeField(Types.CHAR, "PROCESSED", String.class, "processed"),
				new JdbcTypeField(Types.BIGINT, "C_DOCTYPE_ID", long.class, "cDoctypeId"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.BIGINT, "C_ORDER_ID", Long.class, "cOrderId"),
				new JdbcTypeField(Types.DATE, "DATEORDERED", Date.class, "dateordered"),
				new JdbcTypeField(Types.CHAR, "ISPRINTED", String.class, "isprinted"),
				new JdbcTypeField(Types.CHAR, "MOVEMENTTYPE", String.class, "movementtype"),
				new JdbcTypeField(Types.DATE, "MOVEMENTDATE", Date.class, "movementdate"),
				new JdbcTypeField(Types.DATE, "DATEACCT", Date.class, "dateacct"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_ID", long.class, "cBpartnerId"),
				new JdbcTypeField(Types.BIGINT, "C_BPARTNER_LOCATION_ID", long.class, "cBpartnerLocationId"),
				new JdbcTypeField(Types.BIGINT, "M_WAREHOUSE_ID", long.class, "mWarehouseId"),
				new JdbcTypeField(Types.VARCHAR, "POREFERENCE", String.class, "poreference"),
				new JdbcTypeField(Types.CHAR, "DELIVERYRULE", String.class, "deliveryrule"),
				new JdbcTypeField(Types.CHAR, "FREIGHTCOSTRULE", String.class, "freightcostrule"),
				new JdbcTypeField(Types.NUMERIC, "FREIGHTAMT", BigDecimal.class, "freightamt"),
				new JdbcTypeField(Types.CHAR, "DELIVERYVIARULE", String.class, "deliveryviarule"),
				new JdbcTypeField(Types.BIGINT, "M_SHIPPER_ID", Long.class, "mShipperId"),
				new JdbcTypeField(Types.BIGINT, "C_CHARGE_ID", Long.class, "cChargeId"),
				new JdbcTypeField(Types.NUMERIC, "CHARGEAMT", BigDecimal.class, "chargeamt"),
				new JdbcTypeField(Types.CHAR, "PRIORITYRULE", String.class, "priorityrule"),
				new JdbcTypeField(Types.DATE, "DATEPRINTED", Date.class, "dateprinted"),
				new JdbcTypeField(Types.BIGINT, "C_INVOICE_ID", Long.class, "cInvoiceId"),
				new JdbcTypeField(Types.CHAR, "CREATEFROM", String.class, "createfrom"),
				new JdbcTypeField(Types.CHAR, "GENERATETO", String.class, "generateto"),
				new JdbcTypeField(Types.CHAR, "SENDEMAIL", String.class, "sendemail"),
				new JdbcTypeField(Types.BIGINT, "AD_USER_ID", Long.class, "adUserId"),
				new JdbcTypeField(Types.BIGINT, "SALESREP_ID", Long.class, "salesrepId"),
				new JdbcTypeField(Types.BIGINT, "NOPACKAGES", Long.class, "nopackages"),
				new JdbcTypeField(Types.DATE, "PICKDATE", Date.class, "pickdate"),
				new JdbcTypeField(Types.DATE, "SHIPDATE", Date.class, "shipdate"),
				new JdbcTypeField(Types.VARCHAR, "TRACKINGNO", String.class, "trackingno"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECT_ID", Long.class, "cProjectId"),
				new JdbcTypeField(Types.BIGINT, "C_CAMPAIGN_ID", Long.class, "cCampaignId"),
				new JdbcTypeField(Types.BIGINT, "C_ACTIVITY_ID", Long.class, "cActivityId"),
				new JdbcTypeField(Types.BIGINT, "USER1_ID", Long.class, "user1Id"),
				new JdbcTypeField(Types.BIGINT, "USER2_ID", Long.class, "user2Id"),
				new JdbcTypeField(Types.DATE, "DATERECEIVED", Date.class, "datereceived"),
				new JdbcTypeField(Types.CHAR, "ISINTRANSIT", String.class, "isintransit"),
				new JdbcTypeField(Types.BIGINT, "REF_INOUT_ID", Long.class, "refInoutId"),
				new JdbcTypeField(Types.CHAR, "CREATECONFIRM", String.class, "createconfirm"),
				new JdbcTypeField(Types.CHAR, "CREATEPACKAGE", String.class, "createpackage"),
				new JdbcTypeField(Types.CHAR, "ISAPPROVED", String.class, "isapproved"),
				new JdbcTypeField(Types.CHAR, "ISINDISPUTE", String.class, "isindispute"),
				new JdbcTypeField(Types.VARCHAR, "Z_NATURETRANS", String.class, "zNaturetrans"),
				new JdbcTypeField(Types.VARCHAR, "Z_REGIMETRANS", String.class, "zRegimetrans"),
				new JdbcTypeField(Types.CHAR, "MATCHREQUIREMENTR", String.class, "matchrequirementr"),
				new JdbcTypeField(Types.NUMERIC, "VOLUME", BigDecimal.class, "volume"),
				new JdbcTypeField(Types.NUMERIC, "WEIGHT", BigDecimal.class, "weight"),
				new JdbcTypeField(Types.CHAR, "ISRETURNTRX", String.class, "isreturntrx"),
				new JdbcTypeField(Types.BIGINT, "XX_CONTROLEUR_ID", Long.class, "xxControleurId"),
				new JdbcTypeField(Types.BIGINT, "XX_PREPARATEUR_ID", Long.class, "xxPreparateurId"),
				new JdbcTypeField(Types.CHAR, "ISLIVQR", String.class, "islivqr"),
				new JdbcTypeField(Types.BIGINT, "XX_EMBALEUR_ID", Long.class, "xxEmbaleurId"),
				new JdbcTypeField(Types.VARCHAR, "BATCHDOCUMENTNO", String.class, "batchdocumentno"),
				new JdbcTypeField(Types.BIGINT, "XX_SACHET", Long.class, "xxSachet"),
				new JdbcTypeField(Types.BIGINT, "XX_BAG", Long.class, "xxBag"),
				new JdbcTypeField(Types.CHAR, "ISPRINTAPPROVED", String.class, "isprintapproved"),
				new JdbcTypeField(Types.BIGINT, "XX_CONTROLEUR_CH_ID", Long.class, "xxControleurChId"),
				new JdbcTypeField(Types.BIGINT, "XX_EMBALEUR_CH_ID", Long.class, "xxEmbaleurChId"),
				new JdbcTypeField(Types.BIGINT, "XX_PREPARATEUR_CH_ID", Long.class, "xxPreparateurChId"),
				new JdbcTypeField(Types.BIGINT, "XX_CO_CH", Long.class, "xxCoCh"),
				new JdbcTypeField(Types.BIGINT, "XX_CV_CH", Long.class, "xxCvCh"),
				new JdbcTypeField(Types.BIGINT, "XX_SACHET_CH", Long.class, "xxSachetCh"),
				new JdbcTypeField(Types.BIGINT, "XX_BAC_CH", Long.class, "xxBacCh"),
				new JdbcTypeField(Types.CHAR, "ISRECTIFIED", String.class, "isrectified"),
				new JdbcTypeField(Types.CHAR, "ISARCHIVED", String.class, "isarchived"),
				new JdbcTypeField(Types.VARCHAR, "MOTIF_RECTIF", String.class, "motifRectif"),
				new JdbcTypeField(Types.CHAR, "ISRECTIFIEDAFTER", String.class, "isrectifiedafter"),
				new JdbcTypeField(Types.VARCHAR, "POREFERENCE_CH", String.class, "poreferenceCh"),
				new JdbcTypeField(Types.BIGINT, "M_WAREHOUSE_CH_ID", Long.class, "mWarehouseChId"),
				new JdbcTypeField(Types.BIGINT, "SALESREP_CH_ID", Long.class, "salesrepChId"),
				new JdbcTypeField(Types.CHAR, "DOCACTION_CH", String.class, "docactionCh"),
				new JdbcTypeField(Types.CHAR, "ISRECTIFIEDAFTER_CH", String.class, "isrectifiedafterCh"),
				new JdbcTypeField(Types.CHAR, "ISRECTIFIED_CH", String.class, "isrectifiedCh"),
				new JdbcTypeField(Types.CHAR, "ISARCHIVED_CH", String.class, "isarchivedCh"),
				new JdbcTypeField(Types.VARCHAR, "MOTIF_RECTIF_CH", String.class, "motifRectifCh"),
				new JdbcTypeField(Types.CHAR, "XX_ISDEJASERVI", String.class, "xxIsdejaservi"),
				new JdbcTypeField(Types.CHAR, "ETIQUETE", String.class, "etiquete"),
				new JdbcTypeField(Types.CHAR, "ISCONTROLORMODIFIED", String.class, "iscontrolormodified"),
				new JdbcTypeField(Types.CHAR, "ISPREPARATORMODIFIED", String.class, "ispreparatormodified"),
				new JdbcTypeField(Types.BIGINT, "M_PICKTABLE_ID", Long.class, "mPicktableId"),
				new JdbcTypeField(Types.CHAR, "PICKSTATUS", String.class, "pickstatus"),
				new JdbcTypeField(Types.BIGINT, "XX_CONTROLEUR2_CH_ID", Long.class, "xxControleur2ChId"),
				new JdbcTypeField(Types.CHAR, "ISCONTROLOR2MODIFIED", String.class, "iscontrolor2modified"),
				new JdbcTypeField(Types.CHAR, "MODIF_NON_DECLARER", String.class, "modifNonDeclarer"),
				new JdbcTypeField(Types.CHAR, "GENERATEMOVEMENT", String.class, "generatemovement"),
				new JdbcTypeField(Types.CHAR, "XX_CLOSEORDER", String.class, "xxCloseorder"));

		return type;
	}

	/**
	 * Create configuration for cache "MInoutlineCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheMInoutlineCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("MInoutlineCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeMInoutline(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.MInoutline");
		qryEntity.setTableName("M_INOUTLINE");
		qryEntity.setKeyFieldName("mInoutlineId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("mInoutlineId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("line", "java.lang.Long");
		fields.put("description", "java.lang.String");
		fields.put("mInoutId", "java.lang.Long");
		fields.put("cOrderlineId", "java.lang.Long");
		fields.put("mLocatorId", "java.lang.Long");
		fields.put("mProductId", "java.lang.Long");
		fields.put("cUomId", "java.lang.Long");
		fields.put("movementqty", "java.math.BigDecimal");
		fields.put("isinvoiced", "java.lang.String");
		fields.put("mAttributesetinstanceId", "java.lang.Long");
		fields.put("isdescription", "java.lang.String");
		fields.put("confirmedqty", "java.math.BigDecimal");
		fields.put("pickedqty", "java.math.BigDecimal");
		fields.put("scrappedqty", "java.math.BigDecimal");
		fields.put("targetqty", "java.math.BigDecimal");
		fields.put("refInoutlineId", "java.lang.Long");
		fields.put("processed", "java.lang.String");
		fields.put("qtyentered", "java.math.BigDecimal");
		fields.put("cChargeId", "java.lang.Long");
		fields.put("cProjectId", "java.lang.Long");
		fields.put("adOrgtrxId", "java.lang.Long");
		fields.put("cActivityId", "java.lang.Long");
		fields.put("cCampaignId", "java.lang.Long");
		fields.put("cProjectphaseId", "java.lang.Long");
		fields.put("cProjecttaskId", "java.lang.Long");
		fields.put("user1Id", "java.lang.Long");
		fields.put("user2Id", "java.lang.Long");
		fields.put("linedocstatus", "java.lang.String");
		fields.put("qtyallocated", "java.math.BigDecimal");
		fields.put("xxContientug", "java.lang.String");
		fields.put("xxLignegratuite", "java.lang.String");
		fields.put("xxLocatorsourceId", "java.lang.Long");
		fields.put("ismovemented", "java.lang.String");
		fields.put("rCategoryId", "java.lang.Long");
		fields.put("prixvente", "java.math.BigDecimal");
		fields.put("prixrevient", "java.math.BigDecimal");
		fields.put("createdfrominv", "java.lang.String");
		fields.put("mMovementlineId", "java.lang.Long");
		fields.put("mInoutgrouplineId", "java.lang.Long");
		fields.put("origQtyentered", "java.math.BigDecimal");
		fields.put("mInoutlineId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("mInoutlineId", "M_INOUTLINE_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("mInoutId", "M_INOUT_ID");
		aliases.put("cOrderlineId", "C_ORDERLINE_ID");
		aliases.put("mLocatorId", "M_LOCATOR_ID");
		aliases.put("mProductId", "M_PRODUCT_ID");
		aliases.put("cUomId", "C_UOM_ID");
		aliases.put("mAttributesetinstanceId", "M_ATTRIBUTESETINSTANCE_ID");
		aliases.put("refInoutlineId", "REF_INOUTLINE_ID");
		aliases.put("cChargeId", "C_CHARGE_ID");
		aliases.put("cProjectId", "C_PROJECT_ID");
		aliases.put("adOrgtrxId", "AD_ORGTRX_ID");
		aliases.put("cActivityId", "C_ACTIVITY_ID");
		aliases.put("cCampaignId", "C_CAMPAIGN_ID");
		aliases.put("cProjectphaseId", "C_PROJECTPHASE_ID");
		aliases.put("cProjecttaskId", "C_PROJECTTASK_ID");
		aliases.put("user1Id", "USER1_ID");
		aliases.put("user2Id", "USER2_ID");
		aliases.put("xxContientug", "XX_CONTIENTUG");
		aliases.put("xxLignegratuite", "XX_LIGNEGRATUITE");
		aliases.put("xxLocatorsourceId", "XX_LOCATORSOURCE_ID");
		aliases.put("rCategoryId", "R_CATEGORY_ID");
		aliases.put("mMovementlineId", "M_MOVEMENTLINE_ID");
		aliases.put("mInoutgrouplineId", "M_INOUTGROUPLINE_ID");
		aliases.put("origQtyentered", "ORIG_QTYENTERED");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("IDX$$_00010002");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("mAttributesetinstanceId", false);
		indFlds.put("mInoutId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_INOUTLINE_INOUT");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("mInoutId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_INOUTLINE_PRODUCT");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("mProductId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("Z_INOUTLINE_1");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("cOrderlineId", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeMInoutline".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeMInoutline(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.MInoutline");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("M_INOUTLINE");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "M_INOUTLINE_ID", long.class, "mInoutlineId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.BIGINT, "LINE", long.class, "line"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.BIGINT, "M_INOUT_ID", long.class, "mInoutId"),
				new JdbcTypeField(Types.BIGINT, "C_ORDERLINE_ID", Long.class, "cOrderlineId"),
				new JdbcTypeField(Types.BIGINT, "M_LOCATOR_ID", Long.class, "mLocatorId"),
				new JdbcTypeField(Types.BIGINT, "M_PRODUCT_ID", Long.class, "mProductId"),
				new JdbcTypeField(Types.BIGINT, "C_UOM_ID", long.class, "cUomId"),
				new JdbcTypeField(Types.NUMERIC, "MOVEMENTQTY", BigDecimal.class, "movementqty"),
				new JdbcTypeField(Types.CHAR, "ISINVOICED", String.class, "isinvoiced"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESETINSTANCE_ID", Long.class, "mAttributesetinstanceId"),
				new JdbcTypeField(Types.CHAR, "ISDESCRIPTION", String.class, "isdescription"),
				new JdbcTypeField(Types.NUMERIC, "CONFIRMEDQTY", BigDecimal.class, "confirmedqty"),
				new JdbcTypeField(Types.NUMERIC, "PICKEDQTY", BigDecimal.class, "pickedqty"),
				new JdbcTypeField(Types.NUMERIC, "SCRAPPEDQTY", BigDecimal.class, "scrappedqty"),
				new JdbcTypeField(Types.NUMERIC, "TARGETQTY", BigDecimal.class, "targetqty"),
				new JdbcTypeField(Types.BIGINT, "REF_INOUTLINE_ID", Long.class, "refInoutlineId"),
				new JdbcTypeField(Types.CHAR, "PROCESSED", String.class, "processed"),
				new JdbcTypeField(Types.NUMERIC, "QTYENTERED", BigDecimal.class, "qtyentered"),
				new JdbcTypeField(Types.BIGINT, "C_CHARGE_ID", Long.class, "cChargeId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECT_ID", Long.class, "cProjectId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORGTRX_ID", Long.class, "adOrgtrxId"),
				new JdbcTypeField(Types.BIGINT, "C_ACTIVITY_ID", Long.class, "cActivityId"),
				new JdbcTypeField(Types.BIGINT, "C_CAMPAIGN_ID", Long.class, "cCampaignId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECTPHASE_ID", Long.class, "cProjectphaseId"),
				new JdbcTypeField(Types.BIGINT, "C_PROJECTTASK_ID", Long.class, "cProjecttaskId"),
				new JdbcTypeField(Types.BIGINT, "USER1_ID", Long.class, "user1Id"),
				new JdbcTypeField(Types.BIGINT, "USER2_ID", Long.class, "user2Id"),
				new JdbcTypeField(Types.CHAR, "LINEDOCSTATUS", String.class, "linedocstatus"),
				new JdbcTypeField(Types.NUMERIC, "QTYALLOCATED", BigDecimal.class, "qtyallocated"),
				new JdbcTypeField(Types.CHAR, "XX_CONTIENTUG", String.class, "xxContientug"),
				new JdbcTypeField(Types.CHAR, "XX_LIGNEGRATUITE", String.class, "xxLignegratuite"),
				new JdbcTypeField(Types.BIGINT, "XX_LOCATORSOURCE_ID", Long.class, "xxLocatorsourceId"),
				new JdbcTypeField(Types.CHAR, "ISMOVEMENTED", String.class, "ismovemented"),
				new JdbcTypeField(Types.BIGINT, "R_CATEGORY_ID", Long.class, "rCategoryId"),
				new JdbcTypeField(Types.NUMERIC, "PRIXVENTE", BigDecimal.class, "prixvente"),
				new JdbcTypeField(Types.NUMERIC, "PRIXREVIENT", BigDecimal.class, "prixrevient"),
				new JdbcTypeField(Types.CHAR, "CREATEDFROMINV", String.class, "createdfrominv"),
				new JdbcTypeField(Types.BIGINT, "M_MOVEMENTLINE_ID", Long.class, "mMovementlineId"),
				new JdbcTypeField(Types.BIGINT, "M_INOUTGROUPLINE_ID", Long.class, "mInoutgrouplineId"),
				new JdbcTypeField(Types.NUMERIC, "ORIG_QTYENTERED", BigDecimal.class, "origQtyentered"));

		return type;
	}

	/**
	 * Create configuration for cache "MProductCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheMProductCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("MProductCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeMProduct(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.MProduct");
		qryEntity.setTableName("M_PRODUCT");
		qryEntity.setKeyFieldName("mProductId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("mProductId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("value", "java.lang.String");
		fields.put("name", "java.lang.String");
		fields.put("description", "java.lang.String");
		fields.put("documentnote", "java.lang.String");
		fields.put("help", "java.lang.String");
		fields.put("upc", "java.lang.String");
		fields.put("sku", "java.lang.String");
		fields.put("cUomId", "java.lang.Long");
		fields.put("salesrepId", "java.lang.Long");
		fields.put("issummary", "java.lang.String");
		fields.put("isstocked", "java.lang.String");
		fields.put("ispurchased", "java.lang.String");
		fields.put("issold", "java.lang.String");
		fields.put("isbom", "java.lang.String");
		fields.put("isinvoiceprintdetails", "java.lang.String");
		fields.put("ispicklistprintdetails", "java.lang.String");
		fields.put("isverified", "java.lang.String");
		fields.put("mProductCategoryId", "java.lang.Long");
		fields.put("classification", "java.lang.String");
		fields.put("volume", "java.math.BigDecimal");
		fields.put("weight", "java.math.BigDecimal");
		fields.put("shelfwidth", "java.lang.Long");
		fields.put("shelfheight", "java.lang.Long");
		fields.put("shelfdepth", "java.lang.Long");
		fields.put("unitsperpallet", "java.lang.Long");
		fields.put("cTaxcategoryId", "java.lang.Long");
		fields.put("sResourceId", "java.lang.Long");
		fields.put("discontinued", "java.lang.String");
		fields.put("discontinuedby", "java.sql.Date");
		fields.put("processing", "java.lang.String");
		fields.put("sExpensetypeId", "java.lang.Long");
		fields.put("producttype", "java.lang.String");
		fields.put("imageurl", "java.lang.String");
		fields.put("descriptionurl", "java.lang.String");
		fields.put("guaranteedays", "java.lang.Long");
		fields.put("rMailtextId", "java.lang.Long");
		fields.put("versionno", "java.lang.String");
		fields.put("mAttributesetId", "java.lang.Long");
		fields.put("mAttributesetinstanceId", "java.lang.Long");
		fields.put("downloadurl", "java.lang.String");
		fields.put("mFreightcategoryId", "java.lang.Long");
		fields.put("mLocatorId", "java.lang.Long");
		fields.put("guaranteedaysmin", "java.lang.Long");
		fields.put("iswebstorefeatured", "java.lang.String");
		fields.put("isselfservice", "java.lang.String");
		fields.put("cSubscriptiontypeId", "java.lang.Long");
		fields.put("isdropship", "java.lang.String");
		fields.put("zlasttransactiondate", "java.sql.Date");
		fields.put("isexcludeautodelivery", "java.lang.String");
		fields.put("codedouanier", "java.lang.String");
		fields.put("commoditycode", "java.lang.String");
		fields.put("supportunits", "java.lang.Long");
		fields.put("ispurchasedtoorder", "java.lang.String");
		fields.put("licenseinfo", "java.lang.String");
		fields.put("rSourceId", "java.lang.Long");
		fields.put("trialphasedays", "java.lang.Long");
		fields.put("zUomfId", "java.lang.Long");
		fields.put("zPriceumf", "java.math.BigDecimal");
		fields.put("zAttributeumfId", "java.lang.Long");
		fields.put("xxProductclass", "java.lang.String");
		fields.put("type", "java.lang.String");
		fields.put("xxMarketingcategory", "java.lang.String");
		fields.put("xxRank", "java.lang.Long");
		fields.put("xxPricelevel", "java.math.BigDecimal");
		fields.put("isotc", "java.lang.String");
		fields.put("ischronical", "java.lang.String");
		fields.put("isaigue", "java.lang.String");
		fields.put("ispromu", "java.lang.String");
		fields.put("ispsychotrope", "java.lang.String");
		fields.put("isprodnationale", "java.lang.String");
		fields.put("isagreement", "java.lang.String");
		fields.put("iscoldchain", "java.lang.String");
		fields.put("isrefundable", "java.lang.String");
		fields.put("xxDriveragreement", "java.lang.String");
		fields.put("xxPresentation", "java.lang.String");
		fields.put("xxLaboratoryId", "java.lang.Long");
		fields.put("xxUg", "java.math.BigDecimal");
		fields.put("xxClassificationId", "java.lang.Long");
		fields.put("quantity", "java.lang.Long");
		fields.put("xxFormattributeId", "java.lang.Long");
		fields.put("xxAssayId", "java.lang.Long");
		fields.put("xxFormeId", "java.lang.Long");
		fields.put("xxMaxqty", "java.math.BigDecimal");
		fields.put("xxDistributequota", "java.lang.String");
		fields.put("adColorId", "java.lang.Long");
		fields.put("adPrintcolorId", "java.lang.Long");
		fields.put("colortype", "java.lang.String");
		fields.put("red", "java.lang.Long");
		fields.put("green", "java.lang.Long");
		fields.put("blue", "java.lang.Long");
		fields.put("xxSalescontextId", "java.lang.Long");
		fields.put("xxShp", "java.math.BigDecimal");
		fields.put("xxTarifRef", "java.math.BigDecimal");
		fields.put("cCountryId", "java.lang.Long");
		fields.put("xxListeProduct", "java.lang.String");
		fields.put("dateenregistrement", "java.sql.Date");
		fields.put("xxConditionnementId", "java.lang.Long");
		fields.put("isqr", "java.lang.String");
		fields.put("xxProductlineId", "java.lang.Long");
		fields.put("cPaymenttermId", "java.lang.Long");
		fields.put("xxCreateupdatesubstitut", "java.lang.String");
		fields.put("ischer", "java.lang.String");
		fields.put("xxLastugachat", "java.math.BigDecimal");
		fields.put("xxStartegicalproduct", "java.lang.String");
		fields.put("xxIsquotasystem", "java.lang.String");
		fields.put("xxTauxvaleur", "java.lang.Long");
		fields.put("xxProduitsurcommande", "java.lang.String");
		fields.put("xxTypecommande", "java.lang.String");
		fields.put("xxListetauxvaleurId", "java.lang.Long");
		fields.put("xxCorrespondancecapital", "java.lang.String");
		fields.put("xxCriticalproduct", "java.lang.String");
		fields.put("xxCapitalName", "java.lang.String");
		fields.put("xxCapitalName2", "java.lang.String");
		fields.put("xxUgbylot", "java.lang.String");
		fields.put("xxSoumiapprobation", "java.lang.String");
		fields.put("xxUpdatesalesctxmap", "java.lang.String");
		fields.put("xxResteQuota", "java.lang.Long");
		fields.put("xxUpdateprodcatctxvte", "java.lang.String");
		fields.put("generatesalesctx", "java.lang.String");
		fields.put("mProductId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("mProductId", "M_PRODUCT_ID");
		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("cUomId", "C_UOM_ID");
		aliases.put("salesrepId", "SALESREP_ID");
		aliases.put("mProductCategoryId", "M_PRODUCT_CATEGORY_ID");
		aliases.put("cTaxcategoryId", "C_TAXCATEGORY_ID");
		aliases.put("sResourceId", "S_RESOURCE_ID");
		aliases.put("sExpensetypeId", "S_EXPENSETYPE_ID");
		aliases.put("rMailtextId", "R_MAILTEXT_ID");
		aliases.put("mAttributesetId", "M_ATTRIBUTESET_ID");
		aliases.put("mAttributesetinstanceId", "M_ATTRIBUTESETINSTANCE_ID");
		aliases.put("mFreightcategoryId", "M_FREIGHTCATEGORY_ID");
		aliases.put("mLocatorId", "M_LOCATOR_ID");
		aliases.put("cSubscriptiontypeId", "C_SUBSCRIPTIONTYPE_ID");
		aliases.put("rSourceId", "R_SOURCE_ID");
		aliases.put("zUomfId", "Z_UOMF_ID");
		aliases.put("zPriceumf", "Z_PRICEUMF");
		aliases.put("zAttributeumfId", "Z_ATTRIBUTEUMF_ID");
		aliases.put("xxProductclass", "XX_PRODUCTCLASS");
		aliases.put("xxMarketingcategory", "XX_MARKETINGCATEGORY");
		aliases.put("xxRank", "XX_RANK");
		aliases.put("xxPricelevel", "XX_PRICELEVEL");
		aliases.put("xxDriveragreement", "XX_DRIVERAGREEMENT");
		aliases.put("xxPresentation", "XX_PRESENTATION");
		aliases.put("xxLaboratoryId", "XX_LABORATORY_ID");
		aliases.put("xxUg", "XX_UG");
		aliases.put("xxClassificationId", "XX_CLASSIFICATION_ID");
		aliases.put("xxFormattributeId", "XX_FORMATTRIBUTE_ID");
		aliases.put("xxAssayId", "XX_ASSAY_ID");
		aliases.put("xxFormeId", "XX_FORME_ID");
		aliases.put("xxMaxqty", "XX_MAXQTY");
		aliases.put("xxDistributequota", "XX_DISTRIBUTEQUOTA");
		aliases.put("adColorId", "AD_COLOR_ID");
		aliases.put("adPrintcolorId", "AD_PRINTCOLOR_ID");
		aliases.put("xxSalescontextId", "XX_SALESCONTEXT_ID");
		aliases.put("xxShp", "XX_SHP");
		aliases.put("xxTarifRef", "XX_TARIF_REF");
		aliases.put("cCountryId", "C_COUNTRY_ID");
		aliases.put("xxListeProduct", "XX_LISTE_PRODUCT");
		aliases.put("xxConditionnementId", "XX_CONDITIONNEMENT_ID");
		aliases.put("xxProductlineId", "XX_PRODUCTLINE_ID");
		aliases.put("cPaymenttermId", "C_PAYMENTTERM_ID");
		aliases.put("xxCreateupdatesubstitut", "XX_CREATEUPDATESUBSTITUT");
		aliases.put("xxLastugachat", "XX_LASTUGACHAT");
		aliases.put("xxStartegicalproduct", "XX_STARTEGICALPRODUCT");
		aliases.put("xxIsquotasystem", "XX_ISQUOTASYSTEM");
		aliases.put("xxTauxvaleur", "XX_TAUXVALEUR");
		aliases.put("xxProduitsurcommande", "XX_PRODUITSURCOMMANDE");
		aliases.put("xxTypecommande", "XX_TYPECOMMANDE");
		aliases.put("xxListetauxvaleurId", "XX_LISTETAUXVALEUR_ID");
		aliases.put("xxCorrespondancecapital", "XX_CORRESPONDANCECAPITAL");
		aliases.put("xxCriticalproduct", "XX_CRITICALPRODUCT");
		aliases.put("xxCapitalName", "XX_CAPITAL_NAME");
		aliases.put("xxCapitalName2", "XX_CAPITAL_NAME2");
		aliases.put("xxUgbylot", "XX_UGBYLOT");
		aliases.put("xxSoumiapprobation", "XX_SOUMIAPPROBATION");
		aliases.put("xxUpdatesalesctxmap", "XX_UPDATESALESCTXMAP");
		aliases.put("xxResteQuota", "XX_RESTE_QUOTA");
		aliases.put("xxUpdateprodcatctxvte", "XX_UPDATEPRODCATCTXVTE");

		qryEntity.setAliases(aliases);

		ArrayList<QueryIndex> indexes = new ArrayList<>();

		QueryIndex index = new QueryIndex();

		index.setName("M_PRODUCT_EXPENSETYPE");
		index.setIndexType(QueryIndexType.SORTED);

		LinkedHashMap<String, Boolean> indFlds = new LinkedHashMap<>();

		indFlds.put("sExpensetypeId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_PRODUCT_NAME");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("name", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_PRODUCT_PRODUCTCATEGORY");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("mProductCategoryId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_PRODUCT_RESOURCE");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("sResourceId", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_PRODUCT_UPC");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("upc", false);

		index.setFields(indFlds);
		indexes.add(index);

		index = new QueryIndex();

		index.setName("M_PRODUCT_VALUE");
		index.setIndexType(QueryIndexType.SORTED);

		indFlds = new LinkedHashMap<>();

		indFlds.put("adClientId", false);
		indFlds.put("value", false);

		index.setFields(indFlds);
		indexes.add(index);

		qryEntity.setIndexes(indexes);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeMProduct".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeMProduct(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.MProduct");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("M_PRODUCT");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "M_PRODUCT_ID", long.class, "mProductId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"),
				new JdbcTypeField(Types.VARCHAR, "VALUE", String.class, "value"),
				new JdbcTypeField(Types.VARCHAR, "NAME", String.class, "name"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTION", String.class, "description"),
				new JdbcTypeField(Types.VARCHAR, "DOCUMENTNOTE", String.class, "documentnote"),
				new JdbcTypeField(Types.VARCHAR, "HELP", String.class, "help"),
				new JdbcTypeField(Types.VARCHAR, "UPC", String.class, "upc"),
				new JdbcTypeField(Types.VARCHAR, "SKU", String.class, "sku"),
				new JdbcTypeField(Types.BIGINT, "C_UOM_ID", long.class, "cUomId"),
				new JdbcTypeField(Types.BIGINT, "SALESREP_ID", Long.class, "salesrepId"),
				new JdbcTypeField(Types.CHAR, "ISSUMMARY", String.class, "issummary"),
				new JdbcTypeField(Types.CHAR, "ISSTOCKED", String.class, "isstocked"),
				new JdbcTypeField(Types.CHAR, "ISPURCHASED", String.class, "ispurchased"),
				new JdbcTypeField(Types.CHAR, "ISSOLD", String.class, "issold"),
				new JdbcTypeField(Types.CHAR, "ISBOM", String.class, "isbom"),
				new JdbcTypeField(Types.CHAR, "ISINVOICEPRINTDETAILS", String.class, "isinvoiceprintdetails"),
				new JdbcTypeField(Types.CHAR, "ISPICKLISTPRINTDETAILS", String.class, "ispicklistprintdetails"),
				new JdbcTypeField(Types.CHAR, "ISVERIFIED", String.class, "isverified"),
				new JdbcTypeField(Types.BIGINT, "M_PRODUCT_CATEGORY_ID", long.class, "mProductCategoryId"),
				new JdbcTypeField(Types.VARCHAR, "CLASSIFICATION", String.class, "classification"),
				new JdbcTypeField(Types.NUMERIC, "VOLUME", BigDecimal.class, "volume"),
				new JdbcTypeField(Types.NUMERIC, "WEIGHT", BigDecimal.class, "weight"),
				new JdbcTypeField(Types.BIGINT, "SHELFWIDTH", Long.class, "shelfwidth"),
				new JdbcTypeField(Types.BIGINT, "SHELFHEIGHT", Long.class, "shelfheight"),
				new JdbcTypeField(Types.BIGINT, "SHELFDEPTH", Long.class, "shelfdepth"),
				new JdbcTypeField(Types.BIGINT, "UNITSPERPALLET", Long.class, "unitsperpallet"),
				new JdbcTypeField(Types.BIGINT, "C_TAXCATEGORY_ID", long.class, "cTaxcategoryId"),
				new JdbcTypeField(Types.BIGINT, "S_RESOURCE_ID", Long.class, "sResourceId"),
				new JdbcTypeField(Types.CHAR, "DISCONTINUED", String.class, "discontinued"),
				new JdbcTypeField(Types.DATE, "DISCONTINUEDBY", Date.class, "discontinuedby"),
				new JdbcTypeField(Types.CHAR, "PROCESSING", String.class, "processing"),
				new JdbcTypeField(Types.BIGINT, "S_EXPENSETYPE_ID", Long.class, "sExpensetypeId"),
				new JdbcTypeField(Types.CHAR, "PRODUCTTYPE", String.class, "producttype"),
				new JdbcTypeField(Types.VARCHAR, "IMAGEURL", String.class, "imageurl"),
				new JdbcTypeField(Types.VARCHAR, "DESCRIPTIONURL", String.class, "descriptionurl"),
				new JdbcTypeField(Types.BIGINT, "GUARANTEEDAYS", Long.class, "guaranteedays"),
				new JdbcTypeField(Types.BIGINT, "R_MAILTEXT_ID", Long.class, "rMailtextId"),
				new JdbcTypeField(Types.VARCHAR, "VERSIONNO", String.class, "versionno"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESET_ID", Long.class, "mAttributesetId"),
				new JdbcTypeField(Types.BIGINT, "M_ATTRIBUTESETINSTANCE_ID", Long.class, "mAttributesetinstanceId"),
				new JdbcTypeField(Types.VARCHAR, "DOWNLOADURL", String.class, "downloadurl"),
				new JdbcTypeField(Types.BIGINT, "M_FREIGHTCATEGORY_ID", Long.class, "mFreightcategoryId"),
				new JdbcTypeField(Types.BIGINT, "M_LOCATOR_ID", Long.class, "mLocatorId"),
				new JdbcTypeField(Types.BIGINT, "GUARANTEEDAYSMIN", Long.class, "guaranteedaysmin"),
				new JdbcTypeField(Types.CHAR, "ISWEBSTOREFEATURED", String.class, "iswebstorefeatured"),
				new JdbcTypeField(Types.CHAR, "ISSELFSERVICE", String.class, "isselfservice"),
				new JdbcTypeField(Types.BIGINT, "C_SUBSCRIPTIONTYPE_ID", Long.class, "cSubscriptiontypeId"),
				new JdbcTypeField(Types.CHAR, "ISDROPSHIP", String.class, "isdropship"),
				new JdbcTypeField(Types.DATE, "ZLASTTRANSACTIONDATE", Date.class, "zlasttransactiondate"),
				new JdbcTypeField(Types.CHAR, "ISEXCLUDEAUTODELIVERY", String.class, "isexcludeautodelivery"),
				new JdbcTypeField(Types.VARCHAR, "CODEDOUANIER", String.class, "codedouanier"),
				new JdbcTypeField(Types.VARCHAR, "COMMODITYCODE", String.class, "commoditycode"),
				new JdbcTypeField(Types.BIGINT, "SUPPORTUNITS", Long.class, "supportunits"),
				new JdbcTypeField(Types.CHAR, "ISPURCHASEDTOORDER", String.class, "ispurchasedtoorder"),
				new JdbcTypeField(Types.VARCHAR, "LICENSEINFO", String.class, "licenseinfo"),
				new JdbcTypeField(Types.BIGINT, "R_SOURCE_ID", Long.class, "rSourceId"),
				new JdbcTypeField(Types.BIGINT, "TRIALPHASEDAYS", Long.class, "trialphasedays"),
				new JdbcTypeField(Types.BIGINT, "Z_UOMF_ID", Long.class, "zUomfId"),
				new JdbcTypeField(Types.NUMERIC, "Z_PRICEUMF", BigDecimal.class, "zPriceumf"),
				new JdbcTypeField(Types.BIGINT, "Z_ATTRIBUTEUMF_ID", Long.class, "zAttributeumfId"),
				new JdbcTypeField(Types.CHAR, "XX_PRODUCTCLASS", String.class, "xxProductclass"),
				new JdbcTypeField(Types.CHAR, "TYPE", String.class, "type"),
				new JdbcTypeField(Types.CHAR, "XX_MARKETINGCATEGORY", String.class, "xxMarketingcategory"),
				new JdbcTypeField(Types.BIGINT, "XX_RANK", Long.class, "xxRank"),
				new JdbcTypeField(Types.NUMERIC, "XX_PRICELEVEL", BigDecimal.class, "xxPricelevel"),
				new JdbcTypeField(Types.CHAR, "ISOTC", String.class, "isotc"),
				new JdbcTypeField(Types.CHAR, "ISCHRONICAL", String.class, "ischronical"),
				new JdbcTypeField(Types.CHAR, "ISAIGUE", String.class, "isaigue"),
				new JdbcTypeField(Types.CHAR, "ISPROMU", String.class, "ispromu"),
				new JdbcTypeField(Types.CHAR, "ISPSYCHOTROPE", String.class, "ispsychotrope"),
				new JdbcTypeField(Types.CHAR, "ISPRODNATIONALE", String.class, "isprodnationale"),
				new JdbcTypeField(Types.CHAR, "ISAGREEMENT", String.class, "isagreement"),
				new JdbcTypeField(Types.CHAR, "ISCOLDCHAIN", String.class, "iscoldchain"),
				new JdbcTypeField(Types.CHAR, "ISREFUNDABLE", String.class, "isrefundable"),
				new JdbcTypeField(Types.CHAR, "XX_DRIVERAGREEMENT", String.class, "xxDriveragreement"),
				new JdbcTypeField(Types.VARCHAR, "XX_PRESENTATION", String.class, "xxPresentation"),
				new JdbcTypeField(Types.BIGINT, "XX_LABORATORY_ID", Long.class, "xxLaboratoryId"),
				new JdbcTypeField(Types.NUMERIC, "XX_UG", BigDecimal.class, "xxUg"),
				new JdbcTypeField(Types.BIGINT, "XX_CLASSIFICATION_ID", Long.class, "xxClassificationId"),
				new JdbcTypeField(Types.BIGINT, "QUANTITY", Long.class, "quantity"),
				new JdbcTypeField(Types.BIGINT, "XX_FORMATTRIBUTE_ID", Long.class, "xxFormattributeId"),
				new JdbcTypeField(Types.BIGINT, "XX_ASSAY_ID", Long.class, "xxAssayId"),
				new JdbcTypeField(Types.BIGINT, "XX_FORME_ID", Long.class, "xxFormeId"),
				new JdbcTypeField(Types.NUMERIC, "XX_MAXQTY", BigDecimal.class, "xxMaxqty"),
				new JdbcTypeField(Types.CHAR, "XX_DISTRIBUTEQUOTA", String.class, "xxDistributequota"),
				new JdbcTypeField(Types.BIGINT, "AD_COLOR_ID", Long.class, "adColorId"),
				new JdbcTypeField(Types.BIGINT, "AD_PRINTCOLOR_ID", Long.class, "adPrintcolorId"),
				new JdbcTypeField(Types.VARCHAR, "COLORTYPE", String.class, "colortype"),
				new JdbcTypeField(Types.BIGINT, "RED", Long.class, "red"),
				new JdbcTypeField(Types.BIGINT, "GREEN", Long.class, "green"),
				new JdbcTypeField(Types.BIGINT, "BLUE", Long.class, "blue"),
				new JdbcTypeField(Types.BIGINT, "XX_SALESCONTEXT_ID", Long.class, "xxSalescontextId"),
				new JdbcTypeField(Types.NUMERIC, "XX_SHP", BigDecimal.class, "xxShp"),
				new JdbcTypeField(Types.NUMERIC, "XX_TARIF_REF", BigDecimal.class, "xxTarifRef"),
				new JdbcTypeField(Types.BIGINT, "C_COUNTRY_ID", Long.class, "cCountryId"),
				new JdbcTypeField(Types.CHAR, "XX_LISTE_PRODUCT", String.class, "xxListeProduct"),
				new JdbcTypeField(Types.DATE, "DATEENREGISTREMENT", Date.class, "dateenregistrement"),
				new JdbcTypeField(Types.BIGINT, "XX_CONDITIONNEMENT_ID", Long.class, "xxConditionnementId"),
				new JdbcTypeField(Types.CHAR, "ISQR", String.class, "isqr"),
				new JdbcTypeField(Types.BIGINT, "XX_PRODUCTLINE_ID", Long.class, "xxProductlineId"),
				new JdbcTypeField(Types.BIGINT, "C_PAYMENTTERM_ID", Long.class, "cPaymenttermId"),
				new JdbcTypeField(Types.CHAR, "XX_CREATEUPDATESUBSTITUT", String.class, "xxCreateupdatesubstitut"),
				new JdbcTypeField(Types.CHAR, "ISCHER", String.class, "ischer"),
				new JdbcTypeField(Types.NUMERIC, "XX_LASTUGACHAT", BigDecimal.class, "xxLastugachat"),
				new JdbcTypeField(Types.CHAR, "XX_STARTEGICALPRODUCT", String.class, "xxStartegicalproduct"),
				new JdbcTypeField(Types.CHAR, "XX_ISQUOTASYSTEM", String.class, "xxIsquotasystem"),
				new JdbcTypeField(Types.BIGINT, "XX_TAUXVALEUR", Long.class, "xxTauxvaleur"),
				new JdbcTypeField(Types.CHAR, "XX_PRODUITSURCOMMANDE", String.class, "xxProduitsurcommande"),
				new JdbcTypeField(Types.CHAR, "XX_TYPECOMMANDE", String.class, "xxTypecommande"),
				new JdbcTypeField(Types.BIGINT, "XX_LISTETAUXVALEUR_ID", Long.class, "xxListetauxvaleurId"),
				new JdbcTypeField(Types.VARCHAR, "XX_CORRESPONDANCECAPITAL", String.class, "xxCorrespondancecapital"),
				new JdbcTypeField(Types.CHAR, "XX_CRITICALPRODUCT", String.class, "xxCriticalproduct"),
				new JdbcTypeField(Types.VARCHAR, "XX_CAPITAL_NAME", String.class, "xxCapitalName"),
				new JdbcTypeField(Types.VARCHAR, "XX_CAPITAL_NAME2", String.class, "xxCapitalName2"),
				new JdbcTypeField(Types.CHAR, "XX_UGBYLOT", String.class, "xxUgbylot"),
				new JdbcTypeField(Types.CHAR, "XX_SOUMIAPPROBATION", String.class, "xxSoumiapprobation"),
				new JdbcTypeField(Types.CHAR, "XX_UPDATESALESCTXMAP", String.class, "xxUpdatesalesctxmap"),
				new JdbcTypeField(Types.BIGINT, "XX_RESTE_QUOTA", Long.class, "xxResteQuota"),
				new JdbcTypeField(Types.CHAR, "XX_UPDATEPRODCATCTXVTE", String.class, "xxUpdateprodcatctxvte"),
				new JdbcTypeField(Types.CHAR, "GENERATESALESCTX", String.class, "generatesalesctx"));

		return type;
	}

	/**
	 * Create configuration for cache "XxListetauxvaleurCache".
	 * 
	 * @return Configured cache.
	 * @throws Exception
	 *             if failed to create cache configuration.
	 **/
	public static CacheConfiguration cacheXxListetauxvaleurCache() throws Exception {
		CacheConfiguration ccfg = new CacheConfiguration();

		ccfg.setName("XxListetauxvaleurCache");
		ccfg.setCacheMode(CacheMode.PARTITIONED);
		ccfg.setAtomicityMode(CacheAtomicityMode.ATOMIC);

		CacheJdbcPojoStoreFactory cacheStoreFactory = new CacheJdbcPojoStoreFactory();

		cacheStoreFactory.setDataSourceFactory(new Factory<DataSource>() {
			/** {@inheritDoc} **/
			@Override
			public DataSource create() {
				return DataSources.INSTANCE_dsOracle_Compiere;
			};
		});

		cacheStoreFactory.setDialect(new OracleDialect());

		cacheStoreFactory.setTypes(jdbcTypeXxListetauxvaleur(ccfg.getName()));

		ccfg.setCacheStoreFactory(cacheStoreFactory);

		ccfg.setReadThrough(true);
		ccfg.setWriteThrough(true);

		ArrayList<QueryEntity> qryEntities = new ArrayList<>();

		QueryEntity qryEntity = new QueryEntity();

		qryEntity.setKeyType("java.lang.Long");
		qryEntity.setValueType("com.wanasis.model.XxListetauxvaleur");
		qryEntity.setTableName("XX_LISTETAUXVALEUR");
		qryEntity.setKeyFieldName("xxListetauxvaleurId");

		HashSet<String> keyFields = new HashSet<>();

		keyFields.add("xxListetauxvaleurId");

		qryEntity.setKeyFields(keyFields);

		LinkedHashMap<String, String> fields = new LinkedHashMap<>();

		fields.put("adClientId", "java.lang.Long");
		fields.put("adOrgId", "java.lang.Long");
		fields.put("created", "java.sql.Date");
		fields.put("createdby", "java.lang.Long");
		fields.put("isactive", "java.lang.String");
		fields.put("name", "java.lang.String");
		fields.put("rate", "java.math.BigDecimal");
		fields.put("updated", "java.sql.Date");
		fields.put("updatedby", "java.lang.Long");
		fields.put("xxListetauxvaleurId", "java.lang.Long");

		qryEntity.setFields(fields);

		HashMap<String, String> aliases = new HashMap<>();

		aliases.put("adClientId", "AD_CLIENT_ID");
		aliases.put("adOrgId", "AD_ORG_ID");
		aliases.put("xxListetauxvaleurId", "XX_LISTETAUXVALEUR_ID");

		qryEntity.setAliases(aliases);
		qryEntities.add(qryEntity);

		ccfg.setQueryEntities(qryEntities);
		ccfg.setSqlSchema("PUBLIC");
		return ccfg;
	}

	/**
	 * Create JDBC type for "jdbcTypeXxListetauxvaleur".
	 * 
	 * @param cacheName
	 *            Cache name.
	 * @return Configured JDBC type.
	 **/
	private static JdbcType jdbcTypeXxListetauxvaleur(String cacheName) {
		JdbcType type = new JdbcType();

		type.setCacheName(cacheName);
		type.setKeyType(Long.class);
		type.setValueType("com.wanasis.model.XxListetauxvaleur");
		type.setDatabaseSchema("ATTIRYAK");
		type.setDatabaseTable("XX_LISTETAUXVALEUR");

		type.setKeyFields(new JdbcTypeField(Types.BIGINT, "XX_LISTETAUXVALEUR_ID", long.class, "xxListetauxvaleurId"));

		type.setValueFields(new JdbcTypeField(Types.BIGINT, "AD_CLIENT_ID", long.class, "adClientId"),
				new JdbcTypeField(Types.BIGINT, "AD_ORG_ID", long.class, "adOrgId"),
				new JdbcTypeField(Types.DATE, "CREATED", Date.class, "created"),
				new JdbcTypeField(Types.BIGINT, "CREATEDBY", long.class, "createdby"),
				new JdbcTypeField(Types.CHAR, "ISACTIVE", String.class, "isactive"),
				new JdbcTypeField(Types.VARCHAR, "NAME", String.class, "name"),
				new JdbcTypeField(Types.NUMERIC, "RATE", BigDecimal.class, "rate"),
				new JdbcTypeField(Types.DATE, "UPDATED", Date.class, "updated"),
				new JdbcTypeField(Types.BIGINT, "UPDATEDBY", long.class, "updatedby"));

		return type;
	}
}