package startup;

import config.ServerConfigurationFactory;

import java.util.Iterator;
import java.util.List;

import org.apache.ignite.Ignite;
import org.apache.ignite.Ignition;
import org.apache.ignite.cache.query.FieldsQueryCursor;
import org.apache.ignite.cache.query.SqlFieldsQuery;

/** This file was generated by Ignite Web Console (11/21/2019, 08:54) **/
public class ServerNodeCodeStartup {
    /**
     * Start up node with specified configuration.
     * 
     * @param args Command line arguments, none required.
     * @throws Exception If failed.
     **/
    public static void main(String[] args) throws Exception {
        Ignite ignite = Ignition.start(ServerConfigurationFactory.createConfiguration());
        
        System.out.println(">>> Loading caches...");

        
        long start,end,total = 0;
		start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: AdUserCache");
        ignite.cache("AdUserCache").loadCache(null);
        System.out.println("size of cache AdUserCache "+ignite.cache("AdUserCache").size());
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();
        
        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: CBpartnerCache");
        ignite.cache("CBpartnerCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();
        
        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: CInvoiceCache");
        ignite.cache("CInvoiceCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: CInvoicelineCache");
        ignite.cache("CInvoicelineCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: COrderCache");
        ignite.cache("COrderCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: COrderlineCache");
        ignite.cache("COrderlineCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: MAttributeCache");
        ignite.cache("MAttributeCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: MAttributeinstanceCache");
        ignite.cache("MAttributeinstanceCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: MInoutCache");
        ignite.cache("MInoutCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: MInoutlineCache");
        ignite.cache("MInoutlineCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: MProductCache");
        ignite.cache("MProductCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();

        start = System.currentTimeMillis();
        System.out.println(">>> Loading cache: XxListetauxvaleurCache");
        ignite.cache("XxListetauxvaleurCache").loadCache(null);
        end = System.currentTimeMillis() - start;
        total+=end;
        System.out.println(end);
        System.out.println();
        
        String sql = "SELECT bp.name,\n" + 
        		"    CF.documentno,\n" + 
        		"    CF.MOVEMENTDATE,\n" + 
        		"    CF.m_product_id AS M_PRODUCT_ID,\n" + 
        		"    CF.product,\n" + 
        		"    CF.xx_lignegratuite,\n" + 
        		"    CF.m_attributesetinstance_id,\n" + 
        		"    CASE\n" + 
        		"      WHEN cf.isreturntrx='Y'\n" + 
        		"      THEN - CF.qtyentered\n" + 
        		"      ELSE CF.qtyentered\n" + 
        		"    END AS qtyentered,\n" + 
        		"    CF.discount,\n" + 
        		"    CF.DOCSTATUS,\n" + 
        		"    CF.ISRETURNTRX,\n" + 
        		"    CF.XX_REWARDAMT,\n" + 
        		"    CF.OperID,\n" + 
        		"    CF.clientId,\n" + 
        		"    CASE\n" + 
        		"      WHEN cf.xx_lignegratuite='N'\n" + 
        		"      THEN\n" + 
        		"        CASE\n" + 
        		"          WHEN cf.isreturntrx='Y'\n" + 
        		"          THEN             -cf.prixVente*cf.qtyentered* (1-(cf.discount/100))\n" + 
        		"          ELSE cf.prixVente*cf.qtyentered* (1-(cf.discount/100))\n" + 
        		"        END\n" + 
        		"      ELSE 0\n" + 
        		"    END AS totalline,\n" + 
        		"    CASE\n" + 
        		"      WHEN cf.XX_StartegicalProduct='Y'\n" + 
        		"      THEN (\n" + 
        		"        CASE\n" + 
        		"          WHEN cf.xx_lignegratuite='N'\n" + 
        		"          THEN\n" + 
        		"            CASE\n" + 
        		"              WHEN cf.isreturntrx='Y'\n" + 
        		"              THEN             -cf.prixVente*cf.qtyentered* (1-(cf.discount/100))\n" + 
        		"              ELSE cf.prixVente*cf.qtyentered* (1-(cf.discount/100))\n" + 
        		"            END\n" + 
        		"          ELSE 0\n" + 
        		"        END)\n" + 
        		"      ELSE 0\n" + 
        		"    END AS totallineStar,\n" + 
        		"    CASE\n" + 
        		"      WHEN cf.xx_lignegratuite='N'\n" + 
        		"      THEN\n" + 
        		"        CASE\n" + 
        		"          WHEN cf.typevente='W'\n" + 
        		"          THEN\n" + 
        		"            CASE\n" + 
        		"              WHEN cf.isreturntrx='Y'\n" + 
        		"              THEN                -(cf.XX_REWARDAMT/nb_doc)\n" + 
        		"              ELSE cf.XX_REWARDAMT/nb_doc\n" + 
        		"            END\n" + 
        		"          ELSE 0\n" + 
        		"        END\n" + 
        		"      ELSE 0\n" + 
        		"    END AS totalreward,\n" + 
        		"    CF.XX_StartegicalProduct,\n" + 
        		"    CF.SALESREP_ID,\n" + 
        		"    CF.C_DOCTYPE_ID,\n" + 
        		"    CF.AD_ORG_ID,\n" + 
        		"    CF.ad_orgtrx_id,\n" + 
        		"    CF.xx_laboratory_id,\n" + 
        		"    bp.c_bpartner_id,\n" + 
        		"    CF.nb_doc,\n" + 
        		"    CF.rate,\n" + 
        		"    CF.poste_id,\n" + 
        		"    CF.SalesRepTier_poste_id,\n" + 
        		"    CF.recSupr,\n" + 
        		"    CF.recSupr_poste_id,\n" + 
        		"    (SELECT Objectif_CA_oper\n" + 
        		"    FROM c_bpartner\n" + 
        		"    WHERE issalesrep ='Y'\n" + 
        		"    AND isemployee   ='Y'\n" + 
        		"    AND c_bpartner_id=CF.SalesRepTier\n" + 
        		"    ) AS ObjectifOp,\n" + 
        		"    (SELECT Objectif_CA_oper\n" + 
        		"    FROM c_bpartner\n" + 
        		"    WHERE issalesrep ='Y'\n" + 
        		"    AND isemployee   ='Y'\n" + 
        		"    AND c_bpartner_id=CF.SalesRepTier_poste_id\n" + 
        		"    ) AS ObjectifOp_poste_id,\n" + 
        		"    CASE\n" + 
        		"      WHEN cf.ISRETURNTRX='Y'\n" + 
        		"      THEN              -cf.QTYENTERED*prixRevient\n" + 
        		"      ELSE cf.QTYENTERED*prixRevient\n" + 
        		"    END AS consomation\n" + 
        		"  FROM\n" + 
        		"    (SELECT i.documentno,\n" + 
        		"      i.MOVEMENTDATE,\n" + 
        		"      p.m_product_id,\n" + 
        		"      p.name AS product,\n" + 
        		"      ol.xx_lignegratuite,\n" + 
        		"      il.m_attributesetinstance_id,\n" + 
        		"      il.qtyentered,\n" + 
        		"      ol.discount,\n" + 
        		"      i.DOCSTATUS,\n" + 
        		"      i.isreturntrx,\n" + 
        		"      ol.XX_REWARDAMT,\n" + 
        		"      i.C_BPartner_ID AS clientId,\n" + 
        		"      (SELECT u.C_BPARTNER_ID FROM AD_User u WHERE u.AD_User_ID = i.SALESREP_ID\n" + 
        		"      ) AS OperID,\n" + 
        		"      (SELECT ai.Valuenumber\n" + 
        		"      FROM M_AttributeInstance ai\n" + 
        		"      INNER JOIN M_Attribute a\n" + 
        		"      ON (ai.M_Attribute_ID             =a.M_Attribute_ID\n" + 
        		"      AND a.IsInstanceAttribute         ='Y')\n" + 
        		"      WHERE ai.M_AttributeSetInstance_ID=il.m_attributesetinstance_id\n" + 
        		"      AND a.Name                        ='Prix Vente'\n" + 
        		"      ) AS prixVente,\n" + 
        		"      (SELECT ai.Valuenumber\n" + 
        		"      FROM M_AttributeInstance ai\n" + 
        		"      INNER JOIN M_Attribute a\n" + 
        		"      ON (ai.M_Attribute_ID             =a.M_Attribute_ID\n" + 
        		"      AND a.IsInstanceAttribute         ='Y')\n" + 
        		"      WHERE ai.M_AttributeSetInstance_ID=il.m_attributesetinstance_id\n" + 
        		"      AND a.Name                        ='Prix Revient'\n" + 
        		"      ) AS prixRevient,\n" + 
        		"      (SELECT ai.Valuenumber\n" + 
        		"      FROM M_AttributeInstance ai\n" + 
        		"      INNER JOIN M_Attribute a\n" + 
        		"      ON (ai.M_Attribute_ID             =a.M_Attribute_ID\n" + 
        		"      AND a.IsInstanceAttribute         ='Y')\n" + 
        		"      WHERE ai.M_AttributeSetInstance_ID=il.m_attributesetinstance_id\n" + 
        		"      AND a.Name                        ='Fournisseur'\n" + 
        		"      ) AS Fournisseur,\n" + 
        		"      XX_StartegicalProduct,\n" + 
        		"      i.SALESREP_ID,\n" + 
        		"      i.C_DOCTYPE_ID,\n" + 
        		"      i.AD_ORG_ID,\n" + 
        		"      (SELECT o.AD_ORGTRX_ID\n" + 
        		"      FROM c_order o\n" + 
        		"      WHERE i.c_order_id=o.c_order_id\n" + 
        		"      ) AS ad_orgtrx_id,\n" + 
        		"      p.xx_laboratory_id,\n" + 
        		"      lt.rate,\n" + 
        		"      --COUNT(*) over (partition BY il.c_orderline_id) AS nb_doc,\n" + 
        		"      (\n" + 
        		"      SELECT COUNT(*)\n" + 
        		"      FROM m_inoutline ill\n" + 
        		"      WHERE ill.c_orderline_id=il.c_orderline_id\n" + 
        		"      )               AS nb_doc,\n" + 
        		"      ol.type         AS typevente,\n" + 
        		"      bpl.salesrep_id AS poste_id,\n" + 
        		"      (SELECT u.c_bpartner_id FROM AD_User u WHERE u.AD_User_ID = i.salesrep_id\n" + 
        		"      ) AS SalesRepTier,\n" + 
        		"      (SELECT u.c_bpartner_id FROM AD_User u WHERE u.AD_User_ID = bpl.salesrep_id\n" + 
        		"      ) AS SalesRepTier_poste_id,\n" + 
        		"      (SELECT u.XX_RecSupervisor_ID FROM AD_User u WHERE u.AD_User_ID=i.SALESREP_ID\n" + 
        		"      ) AS recSupr,\n" + 
        		"      (SELECT u.XX_RecSupervisor_ID\n" + 
        		"      FROM AD_User u\n" + 
        		"      WHERE u.AD_User_ID=bpl.salesrep_id\n" + 
        		"      ) AS recSupr_poste_id\n" + 
        		"    FROM m_inoutline il\n" + 
        		"    INNER JOIN m_inout i\n" + 
        		"    ON il.m_inout_id=i.m_inout_id\n" + 
        		"    INNER JOIN c_orderline ol\n" + 
        		"    ON ol.c_orderline_id=il.c_orderline_id\n" + 
        		"    INNER JOIN m_product p\n" + 
        		"    ON p.m_product_id=il.m_product_id\n" + 
        		"    INNER JOIN C_Bpartner bpl\n" + 
        		"    ON (bpl.c_bpartner_id=i.c_bpartner_id)\n" + 
        		"    LEFT OUTER JOIN xx_listetauxvaleur lt\n" + 
        		"    ON p.xx_listetauxvaleur_id = lt.xx_listetauxvaleur_id\n" + 
        		"    WHERE i.issotrx            ='Y'\n" + 
        		"      --AND p.m_attributeset_id   IS NOT NULL\n" + 
        		"    AND il.movementqty<>0\n" + 
        		"    ) CF\n" + 
        		"  LEFT OUTER JOIN c_bpartner bp\n" + 
        		"  ON (CF.Fournisseur=bp.c_bpartner_id)\n" + 
        		"  ORDER BY bp.name,\n" + 
        		"    documentno;\n" + 
        		"				";
        
        
        
        SqlFieldsQuery sqlQuery;
        FieldsQueryCursor<List<?>> queryCursor;
        Iterator<List<?>> resultIt;

        
        System.out.println(">>> All caches loaded! in : "+total+" ms");

        System.out.println("---------------------------------------------- ");
        System.out.println("---------------------------------------------- ");
        System.out.println("---------------------------------------------- ");
        
        
        System.out.println("\\n \\n \\n ");
        System.out.println("---------------------------------------------- ");
        System.out.println("---------------------------------------------- ");
        System.out.println("---------------------------------------------- ");

        System.out.println("Checking join query POC first run");
        
        
        
        
        
        start = System.currentTimeMillis();
		sqlQuery = new SqlFieldsQuery(sql );
		queryCursor = ignite.cache(ignite.cacheNames().stream().findAny().get()).query(sqlQuery );
		resultIt = queryCursor.iterator();
		while(resultIt.hasNext())	{
			List resultedQueryFields = resultIt.next();
			System.out.println(resultedQueryFields.size());
		}

		 end = System.currentTimeMillis() - start;
            total+=end;
            
            
            
            //--------------------- second run 
            System.out.println(end);
            System.out.println();
            
            System.out.println(">>> All caches loaded! in : "+total+" ms");

            System.out.println("---------------------------------------------- ");
            System.out.println("---------------------------------------------- ");
            System.out.println("---------------------------------------------- ");
            
            
            System.out.println("\\n \\n \\n ");
            System.out.println("---------------------------------------------- ");
            System.out.println("---------------------------------------------- ");
            System.out.println("---------------------------------------------- ");

            System.out.println("Checking join query POC first run");
            
            
            
            
            
            start = System.currentTimeMillis();
			sqlQuery = new SqlFieldsQuery(sql );
			queryCursor = ignite.cache(ignite.cacheNames().stream().findAny().get()).query(sqlQuery );
			resultIt = queryCursor.iterator();
			while(resultIt.hasNext())	{
				List resultedQueryFields = resultIt.next();
				System.out.println(resultedQueryFields.size());
			}

			 end = System.currentTimeMillis() - start;
	            total+=end;
	            System.out.println(end);
	            System.out.println();
	            
	            
		
		
    }
}